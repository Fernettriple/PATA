#!/usr/bin/env python3

import time,os,openpyxl,subprocess,math,pyperclip
from selenium import webdriver
import pandas as pd
from openpyxl import Workbook
from selenium.webdriver.common.keys import Keys

def load_handling(method): #Esto me permite basicamente agarar cualquier funcion y agregarle que lo reintente cada x tiempo
    while True:
        timer=0
        try:
            method
            break
        except:
            time.sleep(5)
            timer+=1
            if timer > 20:
                    print('El SADE esta trabadisimo (o algo terrible paso) al tratar de clickear el boton '+method+'. Cuando se destrabe, presiona ENTER')
                    input()
            continue
def xpath_click(path):
        timer=0
        while True:
                try:
                        driver.find_element_by_xpath(path).click()
                        time.sleep(1)
                        break
                
                except:
                        time.sleep(2)
                        timer+=1
                        if timer > 20:
                                _=input('El SADE esta trabadisimo (o algo terrible paso) al tratar de clickear el boton '+path+'. Cuando se destrabe, presiona ENTER o escribi "SKIP" para saltear el paso').upper()
                                if _=='SKIP':
                                        break
                                elif _=='PATH':
                                        path=input('Cual es el xpath?  ')
                                        continue
                        continue
def css_click(path):
        timer=0
        while True:
                try:
                        driver.find_element_by_css_selector(path).click()
                        time.sleep(1)
                        break
                
                except:
                        time.sleep(2)
                        timer+=1
                        if timer > 20:
                                _=input('El SADE esta trabadisimo (o algo terrible paso) al tratar de clickear el boton '+path+'. Cuando se destrabe, presiona ENTER o escribi "SKIP" para saltear el paso').upper()
                                if _=='SKIP':
                                        break
                                elif _=='PATH':
                                        path=input('Cual es el xpath?  ')
                                        continue
                        continue

def xpath_send(path,msg):
        timer=0
        while True:
                try:              
                        #BORRA LO QUE SEA QUE HABIA  
                        driver.find_element_by_xpath(path).send_keys(Keys.CONTROL + "a")
                        driver.find_element_by_xpath(path).send_keys(Keys.DELETE)
                        time.sleep(1)
                        #MANDA EL MSG
                        driver.find_element_by_xpath(path).send_keys(msg)   
                        #COPIA EL MSG QUE ENVIE Y VERIFICA QUE ESTE BIEN
                        driver.find_element_by_xpath(path).send_keys(Keys.CONTROL + "a")
                        driver.find_element_by_xpath(path).send_keys(Keys.CONTROL + "c")
                        Verificacion=pyperclip.paste()
                        if Verificacion==msg:
                                break
                #SI FALLA, REPITE 20 VECES MAS HASTA QUE SE PAUSA Y TE DA LA OPCION DE HACERLO MANUAL O SEGUIR LOOPEANDO                
                except:
                        time.sleep(2)
                        timer+=1
                        if timer > 20:
                                _=input('El SADE esta trabadisimo (o algo terrible paso) al tratar de mandar {}. Cuando se destrabe, presiona ENTER o escribi "SKIP" para saltear el paso'.format(path)).upper()
                                if _=='SKIP':
                                        break
                                elif _=='PATH':
                                        path=input('Cual es el xpath?  ')
                                        continue
                                else:
                                        timer-=5
def css_send(path,msg):
        timer=0
        while True:
                try:                
                        driver.find_element_by_css_selector(path).send_keys(Keys.CONTROL + "a")
                        driver.find_element_by_css_selector(path).send_keys(Keys.DELETE)
                        driver.find_element_by_css_selector(path).send_keys(msg)
                        time.sleep(1)
                        driver.find_element_by_css_selector(path).send_keys(Keys.CONTROL + "a")
                        driver.find_element_by_css_selector(path).send_keys(Keys.CONTROL + "c")
                        Verificacion=pyperclip.paste()
                        if Verificacion!=msg:
                                continue
                        else:
                                break                



                        break                
                except:
                        time.sleep(2)
                        timer+=1
                        if timer > 20:
                                _=input('El SADE esta trabadisimo (o algo terrible paso) al tratar de mandar '+Keys+'. Cuando se destrabe, presiona ENTER o escribi "SKIP" para saltear el paso').upper()
                                if _=='SKIP':
                                        break
                                elif _=='PATH':
                                        path=input('Cual es el xpath?  ')
                                        continue
                        continue   

def xpath_enter(path):
        timer=0
        while True:
                try:                
                        driver.find_element_by_xpath(path).send_keys(Keys.ENTER)
                        time.sleep(1)
                        break                
                except:
                        time.sleep(2)
                        timer+=1
                        if timer > 20:
                                _=input('El SADE esta trabadisimo (o algo terrible paso) al tratar de clickear el boton '+path+'. Cuando se destrabe, presiona ENTER o escribi "SKIP" para saltear el paso').upper()
                                if _=='SKIP':
                                        break
                                elif _=='PATH':
                                        path=input('Cual es el xpath?  ')
                                        continue

                        continue       
def css_enter(path):
        timer=0
        while True:
                try:                
                        driver.find_element_by_css_selector(path).send_keys(Keys.ENTER)
                        time.sleep(1)
                        break                
                except:
                        time.sleep(2)
                        timer+=1
                        if timer > 20:
                                _=input('El SADE esta trabadisimo (o algo terrible paso) al tratar de clickear el boton '+path+'. Cuando se destrabe, presiona ENTER o escribi "SKIP" para saltear el paso').upper()
                                if _=='SKIP':
                                        break
                                elif _=='PATH':
                                        path=input('Cual es el xpath?  ')
                                        continue

                        continue       
def barra():
    print('~'*80)
if __name__ == "__main__": 
        #abro el SADE
        print('''Bienvenido al modulo de carga de SADE.
A diferencia del modulo PATA, este tiene bastante poca interaccion, ya que debido a la naturaleza de las Numero_de_Pagina_actualinas webs, no hay mucho para "introducir manualmente"
Lo unico que puede llegar a pasar, es que el BENDITO SADE se trabe, como siempre, entonces el programa al notar que esta todo trabado se pausara y te pedira que apretes "ENTER"(o cualquier tecla)
para seguir con la subida. En cualquier momento podes cerrar esto, lo que si te quedara abierto la actuacion.
Todos los numeros de SADE, junto a su cooperacion se exportaran a un excel que estara en la misma carpeta que este archivo.''')
#Cargo la ODI para actualizar lo nuevo
Letra_Disco_Compartido=input('Que letra es el disco compartido en esta PC?  ').upper()  
usuario=input('Las iniciales con las que saldra el acta   ')
SPEECH=(''' DEPARTAMENTO LABORATORIO QUÍMICO

Conforme a lo solicitado en el presente expediente, se adjunta archivo referente a la cooperación requerida, a fin de dar cumplimiento a dicho pedido.

{}- División química industrial y análisis físicos y Químicos  '''.format(usuario))



APERTURAS_18= {
        '1581-18': '155383/18', '1582-18': '170629/18', '1583-18': '190469/18', '1584-18': '117739/18', '1585-18': '194246/18', '1586-18': '202549/18', '1587-18': '195410/18', '1588-18': '189520/18', '1589-18': '189677/18', '1590-18': '189520/18', '1591-18': '200565/18', '1593-18': '194063/18', '1594-18': '202942/18', '1596-18': '200439/18', '1597-18': '176553/18', '1598-18': '197929/18', '1599-18': '180852/18', '1600-18': '187155/18', '1601-18': '169942/18', '1602-18': '187028/18', '1603-18': '202074/18', '1604-18': '200296/18', '1605-18': '202696/18', '1606-18': '198399/18', '1607-18': '192662/18', '1608-18': '204735/18', '1609-18': '205366/18', '1610-18': '205230/18', '1611-18': '205265/18', '1612-18': '205346/18', '1613-18': '204988/18', '1614-18':
        '204278/18', '1615-18': '202760/18', '1616-18': '204988/18', '1617-18': '195989/18', '1618-18': '204475/18', '1619-18': '200632/18', '1620-18': '202952/18', '1621-18': '10-00-07781-18/00',
        '1626-18': '209086/18', '1628-18': '207212/18', '1629-18': '208335/18', '1630-18': '206772/18', '1631-18': '207187/18', '1632-18': '205717/18', '1633-18': '206477/18', '1634-18': '207340/18', '1635-18': '207889/18', '1636-18': '208019/18', '1637-18': '211344/18', '1638-18': '211098/18', '1639-18': '207003/18', '1640-18': '207986/18', '1641-18': '207938/18', '1642-18': '207942/18', '1643-18': '207926/18', '1644-18': '207948/18', '1645-18': '205800/18', '1646-18': '212164/18', '1647-18': '210749/18', '1648-18': '211644/18', '1649-18': '208227/18', '1650-18': '208128/18', '1651-18': '210740/18', '1652-18': '209927/18', '1656-18': '211686/18', '1657-18': '207273/18', '1658-18': '212887/18', '1659-18': '189375/18', '1660-18': '202735/18', '1661-18': '177632/18', '1662-18': '180923/18', '1664-18': '214547/2018', '1665-18': '213415/2018', '1666-18': '214006/2018', '1667-18': '212498/2018', '1669-18': '213731/2018', '1670-18': '210823/2018', '1671-18': '61587/2018', '1672-18': '207956/18', '1673-18': '207920/2018', '1674-18': '207914/18', '1675-18': '207916/18', '1676-18': '207953/18', '1677-18': '216771/18', '1678-18': '212988/18', '1679-18': '218467/18', '1680-18': '218467/18', '1681-18': '211968/18', '1684-18': '215120/18', '1685-18': '218498/18', '1686-18': '217047/18', '1687-18': '215136/18', '1688-18': '217035/18', '1689-18': '218335/18', '1690-18': '216967/18', '1692-18': '219218/18', '1693-18': '214877/2018', '1694-18': '215110/2018', '1695-18': '201030/18', '1696-18': '220787/2018', '1697-18': '219630/2018', '1698-18': '205012/2018', '1699-18': '221128/2018', '1700-18': '217484/2018', '1701-18': '217516/2018', '1702-18': '217481/2018', '1703-18': '216230/2018', '1707-18': '208144/2018', '1708-18': '208204/2018', '1709-18': '208166/2018', '1710-18': '208163/2018', '1711-18': '218043/2018', '1712-18': '201657/2018', '1714-18': '219045/2018', '1715-18': '219355/2018', '1716-18': '220873/2018', '1717-18': '219436/2018', '1718-18': '218557/2018', '1719-18': '219609/2018', '1720-18': '201059/2018', '1722-18': '218189/2018', '1723-18': '223526/2018', '1724-18': '210737/2018', '1725-18': '212922/2018', '1726-18': '212915/2018', '1727-18': '222851/2018', '1728-18': '223227/2018', '1729-18': '223126/2018', '1730-18': '223162/18', '1731-18': '225256/2018', '1732-18': '223112/2018', '1733-18': '223580/2018', '1734-18': '217480/2018', '1735-18': '217522/18', '1736-18': '217515/2018', '1737-18': '217489/2018', '1738-18': '217486/2018', '1739-18': '225554/2018', '1740-18': '225256/2018', '1741-18': '215743/2018', '1744-18': '198294/2018', '1745-18': '203052/2018', '1746-18': '206959/2018', '1747-18': '202975/2018', '1748-18': '215389/2018', '1749-18': '213660/2018', '1750-18': '215287/2018', '1751-18': '221693/2018', '1752-18': '223087/2018', '1753-18': '225735/2018', '1754-18': '225844/2018', '1755-18': '219917/2018', '1756-18': '12337/2018', '1757-18': '223015/2018', '1758-18': '221559/2018', '1759-18': '219339/2018', '1760-18': '214603/2018', '1761-18': '225737/2018', '1762-18': '194718/2018', '1763-18': '217665/2018', '1764-18': '206621/2018', '1765-18': '221522/2018', '1766-18': '214705/2018', '1767-18': '214761/2018', '1770-18': '225080/2018', '1771-18': '225024/18', '1772-18': '224127/18', '1773-18': '227102/18', '1774-18': '226965/18', '1775-18': '225024/18', '1776-18': '225020/18', '1777-18': '230063/18', '1778-18': '227091/18', '1779-18': '231198/18', '1780-18': '229589/18', '1781-18': '226094/18', '1782-18': '230294/18', '1783-18': '228037/18', '1784-18': '227810/18', '1785-18': '214405/18', '1787-18': '226656/18', '1788-18': '210820/18', '1789-18': '231065/18', '1790-18': '229305/18', '1792-18': '233610/18', '1793-18': '229190/18', '1794-18': '233800/18', '1795-18': '1552/2018', '1796-18': '1553/2018', '1797-18': '231906/18', '1798-18': '233347/18', '1799-18': '233736/18', '1800-18': '233085/2018', '1801-18': '234583/18', '1802-18': '229354/18', '1803-18': '231087/18', '1804-18': '231093/18', '1805-18': '208143/18', '1806-18': '208238/18', '1807-18': '208158/18', '1808-18': '231979/18', '1810-18': '298654/18', '1811-18': '206409/18', '1812-18': '189844/18', '1813-18': '234317/18', '1815-18': '232291/18', '1816-18': '200138/18', '1817-18': '236066/18', '1818-18': '232138/18', '1819-18': '230036/18', '1820-18': '236170/18', '1821-18': '230105/18', '1822-18': '230107/18', '1823-18': '235672/18', '1824-18': '229596/18', '1825-18': '233720/18', '1826-18': '234571/18', '1827-18': '225041/18', '1828-18': '232341/18', '1829-18': '223812/18', '1830-18': '235988/18', '1831-18': '221189/18', '1832-18': '229961/18', '1834-18': '221385/18', '1835-18': '208544/18', '1836-18': '193787/18', '1837-18': '236440/18', '1838-18': '235105/18', '1839-18': '226439/18', '1840-18': '225113/18', '1841-18': '238467/18', '1842-18': '235707/18', '1843-18': '208226/18', '1844-18': '208218/18', '1845-18': '208164/18', '1847-18': '239103/18', '1848-18': '236887/18', '1849-18': '221110/18', '1850-18': '212824/18', '1851-18': '204567/2018', '1852-18': '230053/18', '1853-18': '232813/18', '1854-18': '217302/18', '1855-18': '238134/18', '1857-18': '230138/18', '1858-18': '230170/18', '1859-18': '225114/18', '1860-18': '230147/18', '1861-18': '230126/18', '1862-18': '241341/18', '1863-18': '241249/18', '1864-18': '238940/18', '1865-18': '231106/18', '1866-18': '231102/18', '1867-18': '231104/018', '1868-18': '231084/18', '1869-18': '231099/18', '1870-18': '221128/18', '1871-18': '240074/18', '1872-18': '235327/18', '1873-18': '236403/18', '1874-18': '237720/18', '1875-18': '238187/18', '1877-18': '234414/18', '1881-18': '239295/18', '1882-18': '240302/18', '1883-18': '240875/18', '1885-18': '231303/18', '1886-18': '231057/18', '1887-18': '237354/18', '1888-18': '239081/18', '1889-18': '236900/18', '1890-18': '235937/18', '1891-18': '236153/18', '1894-18': '241165/18', '1895-18': '229756/18', '1896-18': '238134/18', '1898-18': '242936/18', '1899-18': '244929/18', '1900-18': '243699/18', '1901-18': '242734/18', '1902-18': '243193/18', '1903-18': '242041/18', '1904-18': '242728/18', '1905-18': '240630/18', '1907-18': '245296/18', '1908-18': '243273/18', '1909-18': '241080/18', '1910-18': '230960/18', '1911-18': '243531/18', '1912-18': '244961/18', '1913-18': '243438/18', '1914-18': '1549/18', '1917-18': '245269/18', '1918-18': '242843/18', '1919-18': '245219/18', '1920-18': '244930/18', '1921-18': '245396/18', '1922-18': '247653/18', '1923-18': '246648/18', '1924-18': '246851/18', '1926-18': '214976/18', '1927-18': '202456/18', '1929-18': '243384/18', '1930-18': '246791/18', '1933-18': '1533/18', '1934-18': '241369/18', '1935-18': '241359/18', '1936-18': '1534/18', '1938-18': '243480/18', '1939-18': '247710/18', '1941-18': '243196/18', '1942-18': '246178/18', '1945-18': '249639/18', '1947-18': '221528/18', '1948-18':
        '223514/18', '1949-18': '230157/18', '1950-18': '243482/18', '1951-18': '243463/18', '1952-18': '243437/18', '1953-18': '243490/18', '1954-18': '243465/18', '1955-18': '252003/18', '1956-18': '247715/18', '1957-18': '246049/18', '1958-18': '242441/18', '1959-18': '234456/18', '1960-18': '229526/18', '1961-18': '251342/18', '1962-18': '249666/18', '1963-18': '249877/18', '1964-18': '249786/18', '1965-18': '251442/18', '1966-18': '251798/18', '1967-18': '251925/18', '1968-18': '248846/18', '1969-18': '249537/18', '1970-18': '249883/18', '1971-18': '243340/18', '1972-18': '222818/18', '1973-18': '251112/18', '1974-18': '253569/18', '1975-18': '256285/18', '1976-18': '254148/18', '1977-18': '254425/18', '1978-18': '255326/18', '1979-18': '254046/18', '1980-18': '256384/18', '1981-18': '242305/18', '1982-18': '246800/18', '1983-18': '249164/18', '1985-18': '259847/18', '1986-18': '257189/18', '1987-18': '255366/18', '1988-18': '256170/18', '1990-18': '255003/18', '1991-18': '250548/18', '1992-18': '236253/18', '1993-18': '249923/18', '1994-18': '245056/18', '1995-18': '254449/18', '1996-18': '254384/18', '1998-18': '254573/18', '1999-18': '253587/18', '2000-18': '259902/18', '2001-18': '258931/18', '2002-18': '234212/18', '2003-18': '257866/18', '2004-18': '259015/18', '2005-18': '261363/18', '2007-18': '2520631/18', '2008-18': '261302/18', '2009-18': '263609/18', '2010-18': '258973/18', '2011-18': '261508/18', '2012-18': '297575/18', '2013-18': '254386/18', '2014-18': '254413/18', '2015-18': '263512/18', '2016-18': '233421/18', '2020-18': '259330/18', '2021-18': '263323/18', '2022-18': '263809/18', '2023-18': '244976/18', '2025-18': '261450/18', '2026-18': '253673/18', '2027-18': '247475/18', '2030-18': '262276/18', '2031-18': '264341/18', '2032-18': '257269/18', '2033-18': '265818/18', '2034-18': '254435/18', '2035-18': '256171/18', '2036-18': '269306/18', '2037-18': '265095/18', '2042-18': '247502/18', '2043-18': '262115/18', '2047-18': '268581/18', '2048-18': '268592/18', '2049-18': '268583/18', '2050-18': '268354/18', '2051-18': '254403/18', '2052-18': '254361/18', '2053-18': '254359/18', '2054-18': '254346/18', '2055-18': '254379/18', '2056-18': '266415/18', '2057-18': '264395/18', '2058-18': '264497/18', '2059-18': '268929/18', '2060-18': '1690/18', '2061-18': '268313/18', '2062-18': '1699/18', '2063-18': '186464/18', '2064-18': '205957/18', '2065-18': '266205/18', '2066-18': '267961/18', '2070-18': '274409', '2071-18': '268546', '2072-18': '255981', '2073-18': '768', '2074-18': 'C.386', '2075-18': 'C.1502', '2076-18': 'C.18662', '2077-18': '251241/18', '2078-18': '266411/18', '2079-18': '244223/18', '2080-18': '246127/18', '2081-18': '254242/18', '2082-18': '268571/18', '2084-18': '268685/18', '2085-18': '270281/18', '2086-18': '257560/18', '2083-18': '267545/18', '2087-18': '264179/18', '2088-18': '270140/18', '2089-18': '259407/18', '2090-18': '249490/18', '2091-18': '255595/18', '2092-18': '242436/18', '2094-18': '133148/18', '2096-18': '266378/18', '2100-18': '247219/18', '2101-18': '251749/18', '2102-18': '269821/18', '2103-18': '1065/18', '2104-18': '277278/18', '2105-18': '274247/18', '2106-18': '276368/18', '2107-18': '269262/18', '2108-18': '273338/18', '2109-18': '238530/18', '2110-18': '277140/18', '2111-18': '244144/18', '2112-18': '247191/18', '2113-18': '2066/18', '2114-18': '272515/18', '2115-18': '272505/18', '2116-18': '277285/18', '2117-18': '277077/18', '2118-18': '276522/18', '2119-18': '261603/18', '2120-18': '259788/18', '2121-18': '279298/18', '2122-18': '277268/18', '2123-18': '272595/18', '2124-18': '251745/18', '2125-18': '242872/18', '2126-18': '266508/18', '2721-18': '393911/18', '2128-18': '269573/18', '2132-18': '226657/18', '2134-18': '279335/18', '2136-18': '281578/18', '2137-18': '281499/18', '2139-18': '281524/18', '2142-18': '281783/18', '2143-18': '1790/18', '2144-18': '281622/18', '2145-18': '281595/18', '2146-18': '281635/18', '2147-18': '1793/18', '2148-18': '281610/18', '2149-18': '281602/18', '2150-18': '10561/18', '2151-18': '10561/18', '2152-18': '10561/18', '2153-18': '10561/18', '2154-18': '279194/18', '2155-18': '285568/18', '2156-18': '275904/18', '2157-18': '283208/18', '2158-18': '279974/18', '2160-18': '277041/18', '2162-18': '252003/18', '2163-18': '281353/18', '2164-18': '287800/18', '2165-18': '436/18', '2166-18': '281661/18', '2168-18': '287860/18', '2171-18': '285741/18', '2175-18': '284435/18', '2176-18': '252200/18', '2177-18': '282363/18', '2178-18': '289575/18', '2182-18': '290370/18', '2183-18': '291098/18', '2184-18': '2701/18', '2185-18': '276698/18', '2186-18': '275178/18', '2187-18': '278768/18', '2188-18': '284049/18', '2189-18': '844/18', '2190-18': '295477/18', '2191-18': '292095/18', '2193-18': '296176/18', '2194-18': '293591/18', '2197-18': '1374/18', '2198-18': '279390/18', '2199-18': '295478/18', '2200-18': '299050/18', '2201-18': '236784/18', '2203-18': '259655/18', '2207-18': '281300/18', '2208-18': '279102/18', '2209-18': '294421/18', '2210-18': '295166/18', '2211-18': '300395/18', '2213-18': '294464/18', '2214-18': '294444/18', '2215-18': '294394/18', '2216-18': '294372/18', '2217-18': '294451/18', '2218-18': '294456/18', '2219-18': '274772/18', '2220-18': '295969/18', '2223-18': '300361/18', '2225-18': '295243/18',
        '2226-18': '281014/18', '2227-18': '278693/18', '2228-18': '295982/18', '2229-18': '294291/18', '2231-18': '280609/18', '2232-18': '280609/18', '2233-18': '299888/18', '2236-18': '274427/18', '2237-18': '281463/18', '2242-18': '1905/18', '2244-18': '305352/18', '2245-18': '465/18', '2246-18': '307230/18', '2247-18': '288214/18', '2248-18': '300486/18', '2249-18': '305546/18', '2252-18': '307954/18', '2253-18': '308748/18', '2254-18': '308166/18', '2255-18': '307377/18', '2256-18': '295164/18', '2257-18': '292045/18', '2258-18': '294483/18', '2259-18': '298205/18', '2260-18': '305041/18', '2263-18': '302850/18', '2264-18': '309897/18 ', '2265-18': '305485/18', '2266-18': '298121/18', '2267-18': '309523/18', '2268-18': '231928/18', '2269-18': '256590/18', '2270-18': '286433/18', '2271-18': '285812/18', '2272-18': '312826/18', '2274-18': '294287/18', '2276-18': '302517/18', '2278-18': '294266/18', '2279-18': '310278/18', '2280-18': '1343/18', '2281-18': '308251/18', '2282-18': '312335/18', '2293-18': '310573/18', '2286-18': '2305/18', '2287-18': '288154/18', '2290-18': '317048/18', '2291-18': '317234/18', '2295-18': '2004/18', '2296-18': '2003/18', '2297-18': '2005/18', '2298-18': '300441/18', '2299-18': '318549/18', '2300-18': '307381/18', '2301-18': '307382/18', '2302-18': 'C.14217/18', '2306-18': '322983/18', '2307-18': '296121/18', '2308-18': '294926/18', '2309-18': '181822/18', '2310-18': '278381/18', '2311-18': '323076/18', '2314-18': '282438/18', '2316-18': '318591/18', '2318-18': '325380/2018', '2320-18': '326731(510)/18', '2321-18': '326455(509)/18', '2322-18': '325285 (506)/18', '2323-18': '324917/18', '2324-18': '326748/18', '2325-18': '325123/2018', '2328-18': '2108/2018', '2329-18': '326918/2018', '2331-18': '329243/2018', '2334-18': '324161/2018', '2335-18': '285883/2018', '2336-18': '300306/2018', '2337-18': '303369/2018', '2338-18': '269051/2018', '2341-18': '251848/2018', '2342-18': '289344/2018', '2343-18': '334336/2018', '2345-18': '2103/2018', '2346-18': '2102/2018', '2347-18': '2104/2018', '2348-18': '2105/2018', '2349-18': '2106/2018', '2355-18': '2116/2018', '2356-18': '5291/2018', '2358-18': '334874/18', '2359-18': '320340-1128/18', '2360-18': '316801/18', '2361-18': '325683/18', '2362-18': '315948/18', '2363-18': '336930/18', '2364-18': '2101/2018', '2365-18': '2107/2018', '2366-18': '2121/2018', '2367-18': '2122/18', '2368-18': '2123/2018', '2369-18': '518/2018', '2371-18': '330715/18', '2372-18': '334752/2018', '2373-18': '330723/18', '2374-18': '2124/2018', '2375-18': '2125/2018', '2376-18': '2126/2018', '2377-18': '2127/2018', '2381-18': '308395/2018', '2382-18': '338892/18', '2383-18': '343101/18', '2384-18': '340762/18', '2385-18': '2188/18', '2386-18': '2190/18', '2387-18': '2191/18', '2388-18': '2189/18', '2393-18': '337269/2018', '2394-18': '335915/18',
        '2396-18': '338971/18', '2397-18': '330712/18', '2398-18': '346056/2018', '2399-18': '337412/18', '2400-18': '344415/18', '2403-18': '329757/18', '2404-18': '334392/18', '2405-18': '343166/18', '2406-18': '3430738/18', '2412-18': 'S. 345934/18', '2413-18': '342323/18', '2414-18': '329733/18', '2415-18': '341272/18', '2416-18': '327739/18', '2417-18': '332195/18', '2418-18': '341269/18', '2420-18': '345473/18', '2421-18': '339441/18', '2422-18': '337171/18', '2424-18': '348917/18', '2425-18': '330297/18', '2426-18': '339554/18', '2427-18': '348917/18', '2428-18': '335996/18', '2432-18': '334948/18', '2433-18': '334948/18', '2434-18': '334008/18', '2435-18': '3345986/18', '2436-18': '339105/18', '2437-18': '322410/18', '2438-18': '333341/18', '2439-18': '40694/18', '2441-18': '345854/2018', '2442-18': '345653/2018', '2443-18': '348599/2018', '2444-18': '351527/2018', '2448-18': '325351/2018', '2449-18': '343877/2018', '2453-18': '326294/18', '2454-18': '355661/18', '2455-18': '355576/18', '2456-18': '346335/18', '2457-18': '352000/18', '2458-18': '351450/2018', '2459-18': '354501/18', '2462-18': '351362/18', '2463-18': '351314/8', '2464-18': '340093/18', '2465-18': '326743/18', '2466-18': '2261/18', '2467-18': '2258/18', '2468-18': '2259/18', '2469-18': '2263/18', '2470-18': '2260/18', '2471-18': '2264/18', '2472-18': '2257/18', '2473-18': '2262/18', '2474-18': '334733/18', '2475-18': '352412/18', '2476-18': '341655/18', '2477-18': '341389/18', '2478-18': '355630/18', '2479-18': '350827/18', '2480-18': '351409/18', '2481-18': '346754/18', '2482-18': '326435/18', '2483-18': '349238/18', '2484-18': '325258/18', '2485-18': '291171/18', '2486-18': '347476/18', '2487-18': '332284/18', '2489-18': '337435/18', '2490-18': '326740/18', '2492-18': '341774/18', '2493-18': '341859/18', '2501-18': '359097/2018', '2502-18': '352478/2018', '2503-18': '364806/2018', '2506-18': '2298/2018', '2509-18': '367450/18', '2510-18': '367074/18', '2511-18': '330158/18', '2512-18': '357823/18', '2513-18': '356963/18', '2515-18': '371806/18', '2516-18': '371808/18', '2517-18': '369682/18', '2547-18': '366305/18', '2548-18': '362438/18', '2549-18': '367569/18', '2550-18': '369075/18', '2551-18': '371329/18', '2554-18': '369504/18', '2555-18': '373573/18', '2559-18': '369420/18', '2560-18': '369200/18', '2561-18': '351709/18', '2563-18': '379621/2018', '2564-18': '377442/2018', '2565-18': '361167/2018', '2566-18': '373274/2018', '2567-18': '341822/2018', '2568-18': '354276/2018', '2571-18': '380428/2018', '2573-18': '374085/2018', '2575-18': '381620/2018', '2576-18': '375082/2018', '2577-18': '373901/2018', '2578-18': '325258/2018', '2579-18': '381659/2018', '2580-18': '374959/18', '2581-18': '370880/18', '2582-18': '362284/18', '2583-18': '358493/18', '2584-18': '357869/18', '2585-18': '371227/18', '2587-18': '377292/18', '2589-18': '384172/2018', '2590-18': '383578/18', '2591-18': '340096/18', '2592-18': '383479/18', '2593-18': '2376/18', '2594-18': '2372/18', '2595-18': '2373/18', '2596-18': '2374/18', '2599-18': '388489/18', '2600-18': '337083/18', '2601-18': '370865/18', '2602-18': '377253/18', '2603-18': '383059/18', '2604-18': '337384/18', '2605-18': '369018/18', '2606-18': '377324/18', '2607-18': '336924/18', '2609-18': '390327/18', '2610-18': '373934/18', '2613-18': '390604/2018', '2614-18': '384150/18', '2615-18': '374715/18', '2616-18': '378966/18', '2617-18':
        '381677/18', '2618-18': '384124/18', '2619-18': '381721/18', '2620-18': '383631/*18', '2621-18': '383550/18', '2622-18': '385575/18', '2623-18': '381195/18', '2624-18': '382332/18', '2625-18': '281311/18', '2626-18': '380951/18', '2627-18': '383857/18', '2628-18': '389069/18', '2629-18': '354758818', '2630-18': '368567/18', '2631-18': '381554/18', '2632-18': '394111/18', '2635-18': '287149/18', '2636-18': '371683/18', '2637-18': '380680/18', '2638-18': '374782/18', '2639-18': '377033/18', '2646-18': '401669/18', '2647-18': '385137/18', '2648-18': '398594/18', '2649-18': '394914/18', '2652-18': '377392/18', '2653-18': '397859/18', '2654-18': '397846/18', '2655-18': '397860/18', '2656-18': '397849/18', '2657-18': '397855/18', '2659-18': '398841/18', '2660-18': '398918/18', '2661-18': '397174/18', '2662-18': '397143/18', '2663-18': '378908/18', '2664-18': '395269/18', '2665-18': '401982/2018', '2666-18': '396463/18', '2669-18': '406369/18', '2675-18': '384888/2018', '2676-18': '350144/2018', '2677-18': '397712/18', '2678-18': '364298/18', '2679-18': '379805/2018', '2680-18': '385218/18', '2681-18': '379805/18', '2682-18': '380192/18', '2684-18': '390697/18', '2685-18': '384555/18', '2686-18': '385218/18', '2687-18': '381831/18', '2688-18': '378371/18', '2689-18': '408938/18', '2690-18': '408688/18', '2691-18': '405983/18', '2692-18': '408938/18', '2697-18': '403895/18', '2698-18': '390801/18', '2699-18': '385428/18', '2704-18': '410901/18', '2706-18': '411245/18', '2707-18': '411049/18', '2708-18': '392410/18', '2709-18': '390255/18', '2710-18': '397847/18', '2711-18': '397848/18', '2712-18': '397857/18', '2713-18': '397858/18', '2714-18': '402031/18', '2717-18': '403333/18', '2718-18': '397007/18', '2719-18': '384732/18', '2720-18': '390490/18', '2722-18': '397102/18', '2723-18': '399432/18', '2724-18': '392697/18', '2725-18': '398474/18', '2726-18': 'C. 9858/18', '2727-18': 'C. 9766/18', '2728-18': 'C. 12237/18', '2729-18': 'C. 10196/18', '2730-18': 'C. 9684/18', '2733-18': 'GAP 411443/18 INT 2576/18', '2734-18': 'GAP 411435/18 INT. 2575/18', '2735-18': 'GAP 411439/18 INT. 2574/18', '2736-18': '2579/19/18 GAP 413165/18', '2739-18': '414263/18', '2743-18': '269075/18', '2744-18': '328077/18', '2746-18': '413008/18', '2747-18': '277101/18', '2748-18': '373505/18', '2749-18': '416212/18', '2750-18': '413299/18', '2751-18': '412378/18', '2752-18': '396828/18', '2753-18': '418633/18', '2754-18': '411208/18', '2755-18':
        '397739/18', '2756-18': '419171/18', '2757-18': '394836/18', '2758-18': '401173/18', '2759-18': '394716/18', '2760-18': '395221/18', '2761-18': '386875/18', '2762-18': '404181/18', '2763-18': '387983/18', '2764-18': '419084/18', '2766-18': '412559/18', '2767-18': '2578/18 GAP 413133/18', '2768-18': '2580/18- GAP 413177/18', '2769-18': '2581/18 GAP 413198/18', '2770-18': '2582/18 GAP 413206/18', '2771-18': '2583/18 GAP 413218/18', '2775-18': '395389/18', '2776-18': '401294/18', '2777-18': '400463/18', '2778-18': '402005/18', '2779-18': '406523/18', '2780-18': '425725/18', '2781-18': '423278/18', '2782-18': '419023/18', '2783-18': '301106/18', '2786-18': '406633/18', '2787-18': '406471/18', '2788-18': '423773/18', '2790-18': '406600/18', '2791-18': '388363/18', '2792-18': '413449/18', '2793-18': '414050/18', '2794-18': '961/18', '2795-18': '408729/18', '2796-18': '418757/18', '2797-18': '422401/18', '2799-18': '423028/18', '2800-18': '373355/18', '2801-18': '369533/18', '2802-18': '371195/18', '2803-18': '407405/18', '2804-18': '1065/18', '2805-18': '1069/18', '2806-18': '1063/18', '2807-18': '1066/18', '2808-18': '1067/18', '2809-18': '407047/18', '2810-18': '407307/18', '2812-18': '408349/18', '2813-18': '416406/18', '2814-18': '381478/18', '2815-18': '424505/2018', '2816-18': '423163/18', '2819-18': '430494/18', '2820-18': '410817/18', '2821-18': '408182/18', '2822-18': '415843/18', '2823-18': '415838/18', '2824-18': '416206/18', '2825-18': '383104/18', '2826-18': '416140/18', '2827-18': '416066/18', '2828-18': '412433/18', '2829-18': '409050/18', '2830-18': '418991/18', '2832-18': '396868/18', '2833-18': '397735/18', '2834-18': '419094/18', '2835-18': '422174/18', '2836-18': '2577/18', '2837-18': '421408/18', '2840-18': '427489/18', '2841-18': '424862/18', '2843-18': '420837/18', '2844-18': '417074/18', '2845-18': '418482/18', '2846-18': '416785/18', '2847-18': '415039/18', '2848-18': '383528/18', '2849-18': '1074/18', '2850-18': '1073/18', '2851-18': '1071/18', '2852-18': '1072/18', '2853-18': '1075/18', '2854-18': '1044/18', '2858-18': '381195/18', '2859-18': '388020/18', '2860-18': '378885/18', '2861-18': '394569/18', '2862-18': '345854/18', '2864-18': '435595/18', '2865-18': '439035/18', '2866-18': '437912', '2867-18': '435614/18', '2868-18': '437984/18', '2869-18': '438240/18', '2870-18': '418789/18', '2871-18': '409496/18', '2874-18': '421489/18', '2875-18': '3439117/18', '2876-18': '439291/18', '2877-18': '418597/18', '2879-18': '406120/18', '2882-18': '388377/18', '2883-18': '397861/18', '2886-18': '432052/18', '2887-18': '440024/18', '2888-18': '439983/18', '2889-18': '438118/18', '2890-18': '438123/18', '2891-18': '435675/18', '2892-18': '395700/18', '2893-18': '395151/18', '2894-18': '398987/18', '2895-18': '401932/18', '2896-18': '412919/18', '2897-18': '398969/18', '2898-18': '410597/18', '2899-18': '406382/18', '2900-18': '410695/18', '2901-18': '399180/18', '2904-18': '443762/18', '2905-18': '430186/18', '2906-18': '325572/18', '2907-18': '396016/18', '2908-18': '428813/18', '2909-18': '439057/18', '2910-18': '433297/18', '2911-18': '437975/18', '2912-18': '435649/18', '2913-18': '438576/18', '2914-18': '448551/18', '2915-18': '442879/18', '2916-18': '430233/18', '2917-18': '419103/18', '2918-18': '434545/18', '2919-18': '427899/18', '2920-18': '422930/18', '2921-18': '431115/18', '2922-18': '448189/18', '2923-18': '435342/18', '2924-18': '443426/18', '2925-18': '4300007/18', '2926-18': '423690/18', '2927-18': '427619/18', '2928-18': '431927/18', '2929-18': '448750/18', '2935-18': '447279/18', '2936-18': '424498/18', '2937-18': '430858/18', '2938-18': '423559/18', '2939-18': '436050/18', '2940-18': '419454/18', '2941-18': '424715/18', '2942-18': '450927/18', '2943-18': '450911/18', '2944-18': '446445/18', '2945-18': '446478/18', '2946-18': '451141/18', '2948-18': '432620/18', '2949-18': '437543/18', '2950-18': '453660/18', '2951-18': '432915/18', '2952-18': '399635/18', '2953-18': '453660/18', '2954-18': '437579/18', '2955-18': '495793/18', '2956-18': '432915/18', '2958-18': '778975/18', '2960-18': '432915/18', '2961-18': '454993/18', '2962-18': '453994/18', '2963-18': '453378/18', '2964-18': '453354/18', '2965-18': '453295/18', '2966-18': '432052/18', '2967-18': '452604/18', '2969-18': '456184- 2805/18', '2970-18': '454147- 2797/18', '2971-18': '456169-2804/18', '2973-18': '454155-2798/18', '2974-18': '454160-2799/18', '2975-18': '454122-2796/18', '2977-18': '453308/18', '2978-18': '450864/18', '2979-18': '450659/18', '2980-18': '457026/18', '2985-18': '428929/18', '2986-18': '433931/18', '2987-18': '434865/18', '2988-18': '437740/18', '2989-18': '440151/18', '2990-18': '443413/18', '2991-18': '452402/18', '2992-18': '453990/18', '2993-18': '443380/18', '2994-18': '4484168/18', '2995-18': '449176/18', '3003-18': '460565/2018 INT 3438/18', '3006-18': '2838/17 GAP 460818 CAUSA 5735/18', '3007-18': '463098/18', '3012-18': '459410/18', '3014-18': '464017/18', '3015-18': '463986/18', '3016-18': '445990/18', '3017-18': '411245/18', '3019-18': '47755/18', '3020-18': '433347/18', '3021-18': '448363/18', '3022-18': '461124/18', '3023-18': '455188/18', '3024-18': '390450/18', '3025-18': '453965/18', '3026-18': '453466/18', '3027-18': '438426/18', '3030-18': '441693/18', '3031-18': '451688/18', '3032-18': '460091/18', '3033-18': '451073/18', '3034-18': '460685/18', '3035-18': '461602/18', '3036-18': '461315/18', '3039-18': '467694/18', '3040-18': '468095/18', '3041-18': '466217/18', '3042-18': '466323/18', '3049-18': '462577/18', '3051-18': '460888/18', '3052-18': '458790/18', '3053-18': '461545/18', '3054-18': '458115/18', '3055-18': '458329/18', '3056-18': '446504/18', '3057-18': '452681/18', '3058-18': '454761/18', '3059-18': '446011/18', '3060-18': '453941/18', '3061-18': '453310/18', '3062-18': '443525/18', '3063-18': '453881/18', '3064-18': '394674/18', '3066-18': '451673/18', '3067-18': '468201/18', '3068-18': '453804/18', '3070-18': '465550/18', '3071-18': '456377/18', '3072-18': '461523/18', '3073-18': '475312/18', '3074-18': '468731/18', '3075-18': '460106/18', '3076-18': '467359/18', '3077-18': '461689/18', '3078-18': '461574/18', '3079-18': '467475/18', '3080-18': '467717/18', '3081-18': '461602/18',
        '3082-18': '469046/18', '3083-18': '362040/18', '3084-18': '465979/18', '3085-18': '454928/18', '3086-18': '450302/18', '3087-18': '445587/18', '3088-18': '453014/18', '3089-18': '455921/18', '3090-18': '458833/18', '3091-18': '447505/18', '3092-18': '462300/18', '3093-18': '458434/18', '3094-18': '476150/18', '3096-18': '25024', '3098-18': '466568/18', '3099-18': '424298/18', '3100-18': '445633/18', '3101-18': '406613/18', '3103-18': '469130/18', '3104-18': '461546/18', '3105-18': '463309/18', '3106-18': '428268/18', '3107-18': '463312/18', '3108-18': '468795/18', '3109-18': '1923/18', '3110-18': '420561/18', '3111-18': '468292/18', '3112-18': '462907/18', '3113-18': '473490/18', '3114-18': '477667-103/18', '3116-18': '458573/18', '3117-18': '477245/18', '3118-18': '465843/18', '3119-18': '439453/18', '3121-18': '474259/18', '3122-18': '435686/18', '3123-18': '443703/18', '3124-18': '473800/18', '3125-18': '479159/18', '3126-18':
        '470149/18', '3127-18': '474890/18', '3130-18': '479195/18', '3131-18': '472880/18', '3132-18': '472851/18', '3133-18': '443881/18', '3134-18': '479633/18', '3135-18': '479685/18', '3137-18': '468064/18', '3138-18': '460916/18', '3139-18': '453411/18', '3140-18': '483729/18', '3144-18': '2957/18', '3145-18': '2954/18', '3146-18': '2955/18', '3147-18': '2958/18', '3148-18': '2956/18', '3151-18': '488418/18', '3153-18': '2967/2018', '3154-18': '2959/2018', '3155-18': '2961/18', '3156-18': '2966/18', '3157-18': '2960/18', '3158-18': '482687/18', '3159-18': '478597/18', '3160-18': '485374/18', '3161-18': '486607/18', '3162-18': '479192/18', '3163-18': '484862/18', '3164-18': '484049/18', '3165-18': '490342/18', '3167-18': '453419/18', '3172-18': '492163/18', '3174-18': '469246/18', '3175-18': '458662/18', '3176-18': '465778/18', '3177-18': '463957/18', '3178-18': '461542/18', '3179-18': '489101/18', '3180-18': '484482/18', '3182-18': '484231/18', '3183-18': '2975/18 GAP 490422/18', '3184-18': '2971/18 GAP 489154/18', '3185-18': '2974/18 GAP 489192/18', '3186-18': '2973/18 GAP 4905668/18', '3187-18': '2979/18 GAP 490464/18', '3188-18': '491450/18', '3189-18': '495267/18', '3190-18': '491039/18', '3191-18': '490256/18', '3192-18': '490942/18', '3193-18': '492862/18', '3194-18': '489268/18', '3195-18': '495272/18', '3196-18': '485236/18', '3197-18': '490944/18', '3198-18': '468518/18', '3199-18': '466455/18', '3203-18': '495205/18', '3204-18': '495205/18', '3205-18': '485555/18', '3206-18': '485529/18', '3207-18': '485541/18', '3208-18': '485534/18', '3210-18': '497306/18', '3211-18': '497176/18', '3212-18': '494026/18', '3213-18': '494923/18', '3215-18': '488593/18', '3223-18':
        '492705/18', '3224-18': '491174/18', '3225-18': '495315/18', '3229-18': '497493/18', '3230-18': '498111/18', '3231-18': '496518/18', '3232-18': '492336/18', '3233-18': '428061/18', '3234-18': '465799/18', '3237-18': '2979/18', '3238-18': '2968/18', '3239-18': '2970/18', '3240-18': '2977/18', '3241-18': '2981', '3242-18': '502831/18', '3246-18': '503875/18', '3247-18': '504086/18', '3250-18': '491245/18', '3251-18': '2980/18', '3252-18': '2976/18', '3257-18': 'C. 13048/18', '3262-18': '845/18', '3263-18': '505776/18', '3264-18': '512390/18', '3265-18': '512254/18', '3266-18': '509204/18', '3267-18': '497845/18', '3268-18': '495432/10', '3269-18': '495775/18', '3270-18': '509689/18', '3276-18': '511007/18', '3277-18': '509761/18', '3278-18': '509778/18', '3279-18': '501495/18', '3280-18': '509025/18', '3281-18': '507291/18', '3282-18': '509070/18', '3283-18': '504596/18', '3284-18': '507305/18', '3285-18': '514015/18', '3286-18': '516002/18', '3287-18': '514015/18', '3288-18': '468792/18', '3289-18': '514221/18', '3294-18': '504871/18', '3295-18': '495231/18', '3299-18': '520824/18', '3300-18': '489366/18', '3301-18':
        '506498/18', '3302-18': '514158/18', '3303-18': '501633/18', '3304-18': '515692/18', '3305-18': '515924/18', '3310-18': '462808/18', '3312-18': '514803/18', '3318-18': '388446/18', '3319-18': '502246/18', '3323-18': '514542/18', '3324-18': '495231/18', '3327-18': '522499/18', '3328-18': '501495/18', '3329-18': '533636/18', '3335-18': '529442/18', '3336-18': '491108/18', '3337-18': '509008/18', '3338-18': '454143/18', '3339-18': '489621/18', '3340-18': '486528/18', '3341-18': '529720/18', '3342-18': '529714/18', '3343-18': '529698/18', '3344-18': '529708/18', '3345-18': '529685/18', '3346-18': '533984/18', '3347-18': '535718/18', '3349-18': 'S. 529227/18', '3350-18': 'S. 537274/18', '3351-18': 'S. 529411/18', '3352-18': '537711/18', '3356-18': '540323/2018', '3357-18': '535232/18', '3358-18': '539683/18', '3359-18': '536854/18', '3360-18': '524419/10', '3361-18': '523517/18', '3366-18': '539283/18', '3367-18': '529485/18', '3368-18': '527188/18', '3369-18': '540394/18', '3376-18': '542230/18', '3379-18': '544227/18', '3380-18': '544559/18', '3381-18': '517402/18', '3382-18': '543300/218', '3383-18': '528877/18', '3384-18': '520637/18', '3385-18': '519914/18', '3386-18': '537103/18', '3387-18': '540046/18', '3388-18': '529096/18', '3389-18': '533754/18', '3390-18': '539729/18', '3391-18': '542303/18', '3392-18': '542924/18', '3393-18': '543847/18', '3394-18': '544801/18', '3395-18': '522492/18', '3399-18': '543839/18', '3400-18': '541516/18', '3401-18': '525026/18', '3402-18': '531579/18', '3403-18': '537709/18', '3404-18': '540145/18', '3405-18': '536473/18', '3406-18': '529607/18', '3407-18': '525693/18', '3408-18': '545582/18', '3410-18': '547074/18', '3411-18': '535262/18', '3412-18': '539594/18', '3413-18': '540832/18', '3414-18': '542557/18', '3415-18': '537182/18', '3416-18': '541533/18', '3417-18': '543732/18', '3419-18': '549614/18', '3420-18': '542940/18', '3422-18': '549564/18', '3423-18': '552605/18', '3424-18': '546889/18', '3425-18': '547721/18', '3426-18': '545922/18', '3427-18': '548764/18', '3428-18': '549792/18', '3431-18': '542749/18', '3439-18': '542740/18', '3440-18': '547136/18', '3441-18': '549471/18', '3443-18': '527155/18', '3444-18': '514104/18', '3445-18': '504624/18', '3446-18': '550444/18', '3447-18':
        '551676/18', '3449-18': '3407/18', '3450-18': '53500/18', '3451-18': '538387/18', '3455-18': '552107/18', '3456-18': '549344/18', '3457-18': '556992/18', '3458-18': '543725/18', '3459-18':
        '555520/18', '3460-18': '550864/18', '3461-18': '552226/18', '3462-18': '552226/18', '3463-18': '552226/18', '3464-18': '554092/18', '3465-18': '556678/18', '3466-18': '557248/18', '3469-18': '555931/18', '3471-18': '553338/18', '3473-18': '561325/18', '3474-18': '561760/18', '3475-18': '480472/18', '3476-18': '554501/18', '3477-18': '558253/18', '3478-18': '558253/18', '3479-18': '558228/18', '3480-18': '558228/18', '3481-18': '558433/18', '3482-18': '558975/18', '3483-18': '557645/18', '3484-18': '553517/18', '3485-18': '553103/18', '3486-18': '549305/18', '3487-18': '544768/18', '3488-18': '561500/18', '3489-18': '557062/18', '3490-18': '562011/18', '3491-18': '563264/18', '3494-18': '558202/18', '3495-18': '549802/18', '3496-18': '553632/18', '3497-18': '553746/18', '3498-18': '542032/18', '3501-18': '557371/18', '3502-18': '524687/18', '3505-18': '561536/18', '3506-18': '564382/18', '3507-18': '564760/18', '3508-18': '561868/18', '3509-18': '564388/18', '3510-18': '563989/18', '3511-18': '564569/18', '3514-18': '566205/18', '3515-18': '556849/18', '3516-18': '560374/18', '3517-18': '566619/18', '3518-18': '556631/18', '3519-18': '566512/18', '3521-18': '561647/18', '3522-18': '557012/18', '3523-18': '560956/18', '3524-18': '568329/18', '3526-18': '568556/18', '3527-18': '551963/18', '3530-18': '563412/18', '3531-18': '563871/18', '3533-18': '3478/18', '3535-18': '569114/18', '3536-18': '571357/18', '3537-18': '569124/18', '3538-18': '571051/18', '3539-18': '571127/18', '3541-18': '573486/18', '3542-18': '573330/18', '3545-18': '578252/18', '3550-18': '3504/18', '3551-18': '3501/18', '3552-18': '3500/18', '3553-18': '3511/18', '3554-18': '3499/18', '3562-18': '561350/18', '3563-18': '570475/18', '3564-18': '367074/18', '3565-18': '571140/18', '3566-18': '569185/18', '3567-18': '566344/18', '3568-18': '573703/18', '3569-18': '580475/18', '3570-18': '580906/18', '3572-18': '572357/18', '3573-18': '567837/18', '3577-18': '567228/18', '3578-18': '568512/18', '3579-18': '577858/18', '3580-18': '580015/18', '3582-18': '3566/18- C-19156/18', '3586-18': '576220/18', '3587-18': '575803/18', '3588-18': '575230/18', '3589-18': '578086/18', '3590-18': '578530/18', '3591-18': '574908/18', '3592-18': '574530/18', '3593-18': '3514/18', '3594-18': '3362/18', '3595-18': '3510/18', '3596-18': '3361/18', '3597-18': '3539/18', '3598-18': '581606/18', '3599-18': '582227/18', '3600-18': '583193/18', '3601-18': '3364/18', '3602-18': '3359/18', '3603-18': '3503/18', '3604-18': '3604/18', '3609-18': '583242/18', '3610-18': '580789/18', '3611-18': '574908/18', '3612-18': '581121/18', '3613-18': '577722/18', '3614-18': '580483/18', '3315-18': '536938/18', '3616-18': '3513/18', '3617-18': '3505/18', '3618-18': '3507/18', '3619-18': '3512/18', '3620-18': '3509/18', '3622-18': '579473/18', '3623-18': '551461/18', '3626-18': '3505/18', '3627-18': '3363/18', '3628-18': '586569/18', '3631-18': '580388/18', '3632-18': '582675/18', '3633-18': '584918/18', '3634-18': '586547/18', '3635-18': '585623/18', '3638-18': '3597/18 GAP 586404/18', '3639-18': '3502/18 GAP 572872/18', '3640-18': '3598/18 GAP 586420/18', '3643-18': '3515/18 GAP 572884/18', '3644-18': '3490/18 GAP 570668/18', '3645-18': '577477/18', '3646-18': '580556/18', '3647-18': '578059/18', '3648-18': '582850/18', '3649-18': '582946/18', '3650-18': '582934/18', '3651-18': '577177/18', '3652-18': '580915/18', '3653-18': '581050/18', '3654-18': '585371/18', '3655-18': '585566/18', '3656-18': '580710/18', '3657-18': '583517/18', '3660-18': '591686/18', '3663-18': '585032/18', '3664-18': '580803/18',
        '3665-18': '578423/18', '3666-18': '585282/18', '3667-18': '585215/18', '3668-18': '585255/18', '3669-18': '588710/18', '3670-18': '589591/18', '3671-18': '589574/18', '3672-18': '587235/18', '3673-18': '594300/18', '3674-18': '588664/18', '3676-18': '571117/18', '3683-18': '590061/18', '3685-18': '595658/18', '3686-18': '585291/18', '3689-18': '576030/18', '3691-18': '600106/18', '3692-18': '598933/18', '3693-18': '600198/18', '3694-18': '591133/18', '3695-18': '556920/18', '3696-18': '539836/18', '3697-18': '556787/18', '3701-18': '604737/18', '3702-18': '599583/18', '3703-18': '600646/18', '3704-18': '601638/18', '3705-18': '596862/18', '3706-18': '590125/18', '3707-18': '594159/18', '3708-18': '599367/18', '3709-18': '602565/18', '3711-18': '594516/18', '3712-18': '596820/18', '3713-18': '590506/18', '3723-18': '598689/18', '3729-18': '601494/18', '3730-18': '589614/18', '3731-18': '582979/18', '3732-18': '600290/18', '3733-18': '596896/18', '3734-18': '602357/18', '3738-18': '551753/18', '3739-18': '573520/18', '3740-18': '563910/18', '3741-18': '580473/18', '3742-18': '579804/18', '3743-18': '597012/18', '3748-18': '481181/18', '3750-18': '604047/18', '3751-18': '592619/18', '3752-18': '593716/18', '3753-18': '561671/18', '3754-18': '611498/18', '3755-18': '582743/18', '3762-18': '611196/18', '3763-18': '602942/18', '3764-18': '610426/18', '3765-18': '606836/18', '3766-18': '606568/18', '3767-18': '604327/18', '3768-18': '607149/18', '3769-18': '614225/18', '3770-18': '607261/18',
        '3772-18': '609427/18', '3774-18': '609433/18', '3779-18': '606136/18', '3780-18': '613628/18', '3781-18': '614723/18', '3782-18': '612949/18', '3783-18': '611239/18', '3784-18': '611296/18', '3787-18': '615378/18', '3788-18': '615377/18', '3789-18': '614022/18', '3790-18': '592337/18', '3791-18': '604306/18', '3792-18': '597032/18', '3793-18': '611851/18', '3794-18': '614442/18', '3795-18': '3765-614449/18', '3796-18': '3763-614432/18', '3802-18': '613817/18', '3803-18': '601535/18', '3804-18': '600645/18', '3805-18': '615795/18', '3806-18': '622194/18', '3813-18': '620984/18', '3814-18': '619960/18', '3815-18': '604779/18', '3816-18': '621132/18', '3817-18': '617379/18', '3818-18': '616445/18', '3819-18': '611562/18', '3820-18': '616621/18', '3821-18': '616725/18', '3822-18': '619308/18', '3823-18': '600090/18', '3824-18': '620244/18', '3825-18': '616424/18', '3826-18': '618894/18', '3827-18': '614160/18', '3830-18': '321307/18', '3831-18': '619700/2018', '3832-18': '618856/18', '3833-18': '606087/18', '3834-18': '625135/18', '3835-18': '628888/18', '3836-18': '629696/18', '3837-18': '629707/18', '3838-18': '555374/18', '3839-18': '629624/18', '3840-18': '629718/18', '3841-18': '623281/18', '3842-18': '627812/18', '3843-18': '627921/18', '3844-18': '624065/18', '3845-18': '624718/18', '3846-18': '626420/18', '3853-18': '624660/18', '3854-18': '627777/18', '3855-18': '627795/18', '3856-18': '624268/18', '3857-18': '623895/18', '3859-18': '628377/18', '3860-18': '624937/18', '3861-18': '632560/18', '3866-18': '627699/18', '3867-18': '624170/18', '3868-18': '625644/18', '3870-18': '630745/18', '3871-18': '632494/18', '3872-18': '631822/18', '3873-18': '628783/18', '3874-18': '624646/18', '3875-18': '615568/18', '3876-18': '624473/18', '3877-18': '622047/18', '3883-18': '626195/18', '3884-18': '626195/18', '3885-18': '628032/18', '3886-18': '617498/18', '3887-18': '609391/18', '3888-18': '621715/18', '3892-18': '626598/18', '3893-18': '629606/18', '3894-18': '634319/18', '3895-18': '634164/18', '3897-18': '633981/18', '3898-18': '624431/18', '3899-18': '634182/18', '3900-18': '634500/18', '3901-18': '593535/18', '3902-18': '632620/18', '3903-18': '622172/18', '3904-18': '634502/18', '3905-18': '632198/18', '3906-18': '622496/18',
        '3907-18': '639691/18', '3908-18': '563808/18', '3909-18': '595772/18', '3910-18': '591621/18', '3911-18': '582617/18', '3912-18': '589016/18', '3913-18': '584459/18', '3916-18': '628420/18', '3920-18': '561840/18', '3921-18': '512371/18', '3922-18': '522203/18', '3923-18': '615314/18', '3924-18': '615532/18', '3926-18': '642359/18', '3927-18': '637592/18', '3929-18': '642464/2018', '3930-18': '641459/2018', '3931-18': '643114/2018', '3932-18': '644415/2018', '3933-18': '643512/2018', '3936-18': '644365/2018', '3937-18': '633209/2018', '3938-18': '599036/2018', '3939-18': '619017/2018', '3940-18': '610760/2018', '3941-18': '646565/2018', '3942-18': '639902/18', '3943-18': '641311/18', '3944-18': '643860/18', '3945-18': '637642/18', '3946-18': '639012/18', '3949-18': '639927/18', '3950-18': '641843/18', '3951-18': '545982/18', '3952-18': '640152/18', '3953-18': '946/18 CAUSA FLP48192/18', '3954-18': '946/18 CAUSA FLP48192/18', '3955-18': '946/18 CAUSA FLP48192/18', '3956-18': '946/18 CAUSA FLP48192/18', '3957-18': '638295/18', '3958-18': '636742/18', '3959-18': '637279/18', '3960-18': '635537/18', '3961-18': '636930/18', '3969-18': '639047/18', '3970-18': '639713/18', '3974-18': '653987/18', '3977-18': '632632/18', '3978-18': '640798/18', '3979-18': '643448/18', '3980-18': '650880/18', '3984-18': '639541/18', '3985-18': '637664/18', '3986-18': '642662/18', '3987-18': '649864/18', '3988-18': '640495/18', '3989-18': '584380/18', '3990-18': '652112/18', '3991-18': '649754/18', '3996-18': '639853/18', '3997-18': '651974/18', '3998-18': '643582/18', '4003-18': '649582/18', '4004-18': '648449/18', '4005-18': '652766/18', '4006-18': '651022/18', '4007-18': '650648/18', '4008-18':
        '4001/18 GAP 657015/18', '4009-18': '634890/18', '4010-18': '639885/18', '4011-18': '650038/18', '4012-18': '657455/18', '4013-18': '652250/18', '4014-18': '658681/18', '4015-18': '636592/18', '4017-18': '645429/18', '4018-18': '647480/18', '4019-18': '653877/18', '4020-18': '652496/18', '4021-18': '643671/18', '4025-18': '660295/18', '4026-18': '650183/18', '4027-18': '657188/18', '4028-18': '657254/18', '4029-18': '654848/18', '4032-18': '613995/18', '4033-18': '616953/18', '4034-18': '611369/18', '4035-18': '607108/18', '4036-18': '571181/18', '4037-18': '525261/18', '4039-18': '634452/18', '4040-18': '622082/18', '4041-18': '613997/18', '4042-18': '626663/18', '4043-18': '624167/18', '4044-18': '544046/18', '4045-18': '637262/18', '4046-18':
        '620122/18', '4050-18': '664175/18', '4051-18': '663631/18', '4052-18': '663298/18', '4053-18': '664311/18', '4054-18': '666256/18', '4055-18': '657635/18', '4060-18': '621819/18', '4061-18': '623111/18', '4062-18': '636886/18', '4063-18': '637300/18', '4064-18': '637122/18', '4065-18': '638084/18', '4067-18': '638307/18', '4069-18': '669313/18', '4072-18': '669578/18', '4073-18': '670305/18', '4074-18': '664927/18', '4075-18': '668520/18', '4076-18': '663816/18', '4077-18': '670696/18', '4080-18': '672001/18', '4081-18': '664081/18', '4082-18': '650026/18', '4083-18': '664004/18', '4084-18': '656969/18', '4085-18': '575589/18', '4086-18': '582929/18', '4087-18': '636492/18', '4088-18': '658459/18', '4089-18': '616816/18', '4090-18': '582929/18', '4091-18': '642795/18', '4092-18': '655054/18', '4094-18': '675719/18', '4095-18': '672980/18', '4096-18': '675735/18', '4097-18': '674545/18', '4098-18': '669543/18', '4099-18': '672466/18', '4105-18': '643964/18', '4106-18': '675980/18', '4107-18': '672034/18', '4111-18': '674291/18', '4112-18': '669117/18', '4113-18': '676106/18', '4114-18': '675197/18', '4115-18': '674809/18', '4116-18': '666307/18', '4117-18': '542716/18', '4118-18': '663839/18', '4119-18': '674194/18', '4122-18': '683926/18', '4131-18': '639262/18', '4133-18': '640048/18', '4134-18': '647245/18', '4135-18': '655022/18', '4136-18': '656760/18', '4137-18': '669496/18', '4141-18': '683174/18', '4142-19': '668664/18'}
APERTURAS_19={
        '1-19': '677283/18', '2-19': '682936/18', '4-19': '678575/2018', '5-19': '676813/2018', '6-19': '669977/18', '7-19': '664072/18', '8-19': '690622/18', '9-19': '666467/18', '11-19': '659861/18', '12-19': '682212/18', '14-19': '690819/18', '15-19': '688079/18', '16-19': '675925/18', '17-19': '689325/18', '20-19': '671038/18', '23-19': '650127/18', '24-19': '1635/18', '25-19':
        '635/18', '26-19': '684630/18', '27-19': '673900/18', '28-19': '691390/18', '29-19': '391286/18', '30-19': '691316/18', '32-19': '636109/18', '38-19': '5094/19', '39-19': '683210/18', '40-19': '690167/18', '41-19': '688916/18', '42-19': '820/19', '47-19': '5060/19', '49-19': '632941/18', '50-19': '669573/18', '51-19': '663770/18', '54-19': '5633/18-6359/19', '55-19': '628/19', '56-19': '685535/18', '57-19': '3160/19', '58-19': '666399/18', '59-19': '687430/18', '60-19': '650069/18', '66-19': '3307/19', '67-19': '5103/19', '68-19': '6513/19', '69-19': '7696/19', '70-19': '5106/19', '72-19': '2932/19', '73-19': '8668/19', '74-19': '8432/19', '75-19': '10114/19', '76-19': '7636/19', '77-19': '10767/19', '79-19': '690070/18', '80-19': '671882/18', '81-19': '684708/18', '82-19': '668940/18', '83-19': '685769/18', '89-19': '11192/19', '90-19': '676294/18', '91-19': '8081/19', '92-19': '106/19', '93-19': '10527/19', '94-19': '10966/19', '100-19': '684112/18', '101-19': '677268/18', '102-19': '8800/19', '109-19': '8782/19', '110-19': '9257/19', '111-19': '9541/19', '112-19': '9531/19', '113-19': '9588/19', '114-19': '16041/19', '115-19': '7995/18', '120-19': '685068/18', '121-19': '8550/19', '122-19': '11192/19', '123-19': '15755/19', '124-19': '16002/19', '126-19': '10591/19', '130-19': '13688/19', '132-19':
        '13002/19', '135-19': '683223/18', '136-19': '14847/19', '137-19': '15188/19', '138-19': '15914/19', '141-19': '650015/18', '142-19': '663785/18', '143-19': '600315/18', '144-19': '634851/18', '145-19': '659823/18', '158-19': '7769/19', '159-19': '20632/19', '160-19': '18325/19', '161-19': '17432/19', '162-19': '18819/19', '173-19': '18796/18', '175-19': '25570/19', '176-19': '8179/19', '184-19': '25800/19', '185-19': '28146/19', '186-19': '24879/19', '187-19': '24416/19', '188-19': '21386/19', '189-19': '17969/19', '197-19': '21333/19', '198-19': '21559/19', '199-19': '23790/19', '200-19': '24436/19', '201-19': '24509/19', '202-19': '32221/19', '205-19': '31811/19', '206-19': '33437/19', '208-19': '23540/19', '209-19': '9666/19', '211-19': '24924/19', '212-19': '25737/19', '213-19': '25696/19', '214-19': '25790/19', '215-19': '23941/19', '216-19': '461555/19', '217-19': '35919/19', '218-19': '15546/19', '219-19': '140/19', '220-19': '676988/19', '221-19': '682141/19', '222-19': '30326/19', '223-19': '672134/19', '227-19': '38921/2019', '228-19': '39524/2019', '232-19': '35641/19', '233-19': '328082/19', '236-19': '35511/19', '237-19': '40535/19', '238-19': '39815/19', '239-19': '39394/19', '240-19': '35339/19', '241-19': '38646/19', '242-19': '39267/19', '243-19': '35502/19', '244-19': '23291/19', '245-19': '17334/19', '246-19': '657214/19', '247-19': '33667/19', '252-19': '40215/19', '253-19': '672073/18', '254-19': '678769/19', '255-19': '40598/19', '256-19': '45007/19', '261-19': '39641/19', '262-19': '47785/19', '263-19': '35864/19', '264-19': '39534/19', '265-19': '33090/19', '266-19': '674405/19', '267-19': '14700/19', '268-19': '47425/19', '269-19': '2034/19', '272-19': '44507/19', '273-19': '33864/19', '274-19': '34973/19', '275-19': '537462/19', '276-19': '47818/19', '277-19': '46780/19', '278-19': '39564/19', '279-19': '39530/19', '280-19': '39647/19', '282-19': '49533/19', '283-19': '33084/19', '284-19': '44816/19', '285-19': '40820', '286-19': '41256/19', '287-19': '28100/19', '291-19': '657397/18', '292-19': '41170/19', '293-19': '33331/19', '297-19': '50029/19', '298-19': '49873/19', '305-19': '52685/19', '306-19': '50079/19', '307-19': '47330/19', '308-19': '29105/19', '309-19': '29411/19', '310-19': '26288/19',
        '311-19': '28784/19', '312-19': '44540/19', '313-19': '43325/19', '314-19': '51813/19', '315-19': '689262/19', '324-19': '51694/19', '325-19': '21089/19', '326-19': '52843/19', '327-19': '44823/19', '330-19': '53109/19', '335-19': '54682/19', '336-19': '47819/19', '337-19': '49426/19', '338-19': '56941/19', '339-19': '36217/19', '340-19': '57171/19', '341-19': '47042/19', '342-19': '50011/19', '344-19': '607055/19', '345-19': '674362/19', '346-19': '44060/19', '347-19': '56154/19', '348-19': '220/19', '349-19': '221/19', '350-19': '47819/19', '351-19': '216/19', '354-19': '49326/19', '355-19': '52426/19', '356-19': '58781/18', '361-19': '11246/19', '364-19': '110/19', '365-19': '30890/19', '366-19': '30870/19', '367-19': '58392/19', '368-19': '45969/19', '369-19': '49601/19', '370-19': '52103/19', '371-19': '656320/19', '375-19': '60855/19', '376-19': '252/19', '377-19': '250/19', '379-19': '63521/19', '380-19': '64351/19', '381-19': '54489/19', '382-19': '61710/19', '384-19': '49613/19', '385-19': '63799/19', '386-19': '63819/19', '387-19': '48693/19', '388-19': '58379/19', '389-19': '63996/19', '390-19': '60435/19', '391-19': '56674/19', '392-19': '66374/19', '393-19': '44764/19', '394-19': '65437/19', '395-19': '51590/19', '396-19': '54602/19', '401-19': '68881/19', '402-19': '68852/19', '403-19': '69186/19', '404-19': '66181/19', '405-19': '65259/19', '406-19': '65321/19', '407-19': '64510/19', '408-19': '67882/19', '409-19': '71459/19', '410-19': '68852/19', '414-19': '67092/19', '415-19': '69708/19', '416-19': '71337/19', '417-19': '71350/19', '419-19': '66370/19', '420-19': '66503/19', '421-19': '59800/19', '422-19': '68730/19', '423-19': '74319/19', '424-19': '73231/19', '427-19': '66619/19', '428-19': '66493/19', '433-19': '70260/19', '434-19': '74112/19', '435-19': '70678/19', '436-19': '73521/19', '438-19': '76870/19', '439-19': '66907/19', '440-19': '74427/19', '441-19': '50232/19', '442-19': '63741/19', '443-19': '547197/19', '444-19': '41205/19', '445-19': '74414/19', '447-19': '64420/19', '448-19': '64448/19', '450-19': '59592/19', '451-19': '76139/19', '452-19': '79573/19', '453-19': '77797/19', '455-19': '79422-323/19', '457-19': '79075/19', '458-19': '75694/19', '459-19': '79439/19', '460-19': '61138/19', '461-19': '76658/19', '462-19': '78671/19', '463-19': '81658/19', '464-19': '81447/19', '465-19': '50210/19', '466-19': '35535/19', '467-19': '49919/19', '468-19': '52418/19', '469-19': '46291/19', '470-19': '56371/19', '471-19': '39093/19', '474-19': '78075/19', '475-19': '79268/19', '476-19': '76435/19', '477-19': '76396/19', '478-19': '79268/19', '480-19': '81919/19', '484-19': '84761/19', '485-19': '82096/19', '486-19': '84222/19', '487-19': '80587/19', '488-19': '79190/19', '489-19': '79421/19', '490-19': '83025/19', '491-19': '84374/19', '494-19': '76572/19',
        '495-19': '85163/19', '496-19': '84859/19', '497-19': '84536/19', '498-19': '86589/19', '499-19': '85666/19', '500-19': '89952/19', '501-19': '90071/19', '505-19': '76743/19', '506-19': '90161/19', '507-19': '63948/19', '508-19': '84293/19', '509-19': '87021/19', '510-19': '85755/19', '511-19': '74024/19', '512-19': '89295/19', '513-19': '81681/19', '515-19': 'Srio 165 GAP 91219/19', '516-19': '52677/19', '517-19': '87442/19', '518-19': '32677/19', '519-19': '71254/19', '520-19': '81339/19', '522-19': '91298/19', '523-19': '78313/19', '524-19': '92875/19', '526-19': '88869/19', '527-19': '88473/19', '528-19': '84857/19', '529-19': '89728/19', '530-19': '92484/19', '532-19': '84833/19', '533-19': '74032/19', '535-19': '67221/19', '536-19': '72486/19', '537-19': '84842/19', '538-19': '94380/19', '545-19': '94554/19', '546-19': '85602/19', '547-19': '94888/19', '548-19': '90421/19', '549-19': '95181/19', '553-19': '86412/2019', '554-19': '76496/19', '555-19': '84871/19', '556-19': '83324/19', '557-19': '80825/19', '558-19': '75289/19', '560-19': '66666/19', '561-19': '89960/19', '562-19': '66420/19', '566-19': '100318/19', '567-19': '97499/19', '568-19': '94966/19', '569-19': '95304/19', '570-19': '95052/19', '571-19': '95346/19', '572-19': '97039/19', '574-19': '82120/19', '575-19': '97631/19', '577-19': '102647/19', '581-19': '99981/19', '582-19': '97778/19', '583-19': '102012/19', '584-19': '86337/19', '585-19': '99281/19', '586-19': '99892/19', '587-19': '94690/19', '588-19': '91459/19', '589-19': '63756/19', '595-19': '78424/19', '596-19': '81687/19', '597-19': '99868/19', '598-19': '81726/19', '599-19': '92205/19', '602-19': '85488/19', '603-19': '95397/19', '604-19': '100238/19', '605-19': '100306/19', '606-19': '104885/19', '607-19': '101769/19', '609-19': '103796/19', '610-19': '105858/19', '611-19': '107578/19', '613-19': '99484/19', '614-19': '68787/19', '615-19': '96567/19', '617-19': '101252/19', '618-19': '101673/19', '619-19': '89911/19', '620-19': '39195/19', '622-19': '97187/19', '625-19': '235/19 COMP 237/19', '626-19': '100355/19', '627-19': '95456/19', '630-19': '108204/19', '631-19': '108283/19', '632-19': '108974/19', '635-19': '92380/19', '636-19': '89934/19', '637-19': '110161/19', '638-19': '110862/19', '639-19': '109118/19', '640-19': '108431/19', '641-19': '98691/19', '642-19': '104861/19', '643-19': '238/19', '645-19': '112759/19', '646-19': '113097/19', '648-19': '106390/19', '649-19': '111155/19', '650-19': '112680/19', '651-19': '105044/19', '652-19': '98069/19', '656-19': '101160/19', '657-19': '66733/19', '660-19': '115871/19', '661-19': '113599/19', '662-19': '113024/19', '663-19': '112965/19', '667-19': '91857/19', '668-19': '77012/19', '669-19': '99557/19', '670-19': '100234/19', '671-19': '115725/19', '672-19': '115397/19', '673-19': '100469/19', '678-19': '120400/19', '679-19': '118235/19', '680-19': '116643/19', '681-19': '119296/19', '682-19': '120806/19', '684-19': '123520/19', '685-19': '115411/19', '689-19': '120574/19', '690-19': '123791/19', '691-19': '126608/19', '692-19': '126442/19', '693-19': '126536/19', '694-19': '126582/19', '697-19': '128941/19 A/COMP 128380/19', '698-19': '117013/19', '699-19': '123108/19', '700-19': '115614/19', '702-19': '128875/19', '703-19': '129219/19', '706-19': '114478/19', '707-19': '131586/19', '708-19': '128387/19', '709-19': '131115/19', '710-19': '126531/19', '715-19': '136428', '719-19': '131889/19 COMP 130927/19', '720-19': '133233 COMP 131935 COMP 131067/19', '721-19': '124448/19 COMP 123499/19', '722-19': '120414/19', '723-19': '131826/19 COMP 130831/19', '729-19': '135831/19', '730-19': '139344/19', '731-19': '131393/19', '733-19': '84362/19', '739-19': '126359/19', '740-19': '119215/19', '741-19': '116069/19', '743-19': '134067/19', '744-19': '129159/19', '745-19': '139214/19', '746-19': '64784/19', '747-19': '40927/19', '748-19': '118763/19', '754-19': '144489/19', '755-19': '141937/19', '756-19': '132773/19',
        '757-19': '135120/19', '759-19': '81983/19', '760-19': '130654/19', '761-19': '139499/19', '766-19': '138906/19', '767-19': '142933/19', '770-19': '141761/19', '771-19': '100525/19', '772-19': '99911/19', '775-19': '110746/19', '776-19': '132498/19', '777-19': '113898/19', '778-19': '143719/19', '779-19': '149250/19', '780-19': '139334/19', '781-19': '134842/19', '782-19': '1111433/19', '783-19': '64628/19', '784-19': '131773/19', '785-19': '1111288/19', '786-19': '111123/19', '788-19': '138332/19', '789-19': '113208/19', '790-19': '130781/19', '791-19': '129383/19', '792-19': '47576/19', '793-19': '128725/19', '794-19': '144098/19', '795-19': '150881/19', '796-19': '144481/19', '797-19': '144762/19', '798-19': '144880/19', '803-19': '134568/19', '804-19': '129363/19', '805-19': '126299/19', '806-19': '136399/19', '807-19': '139932/19', '808-19': '117800/19', '809-19': '117250/19', '810-19': '153417/19 Ac.150885/19', '811-19': '139981/19', '812-19': '111356/19', '813-19': '132436/19', '814-19': '112956/19', '815-19': '136139/19', '821-19': '89671/19', '822-19': '132780/19', '823-19': '132941/19', '824-19': '141409/19', '826-19': '131940/19', '827-19': '97656/19', '828-19': '118238/19', '829-19': '109695/19', '830-19': '130693/19', '832-19': '150098/19', '833-19': '143624/19', '834-19': '144287/19', '835-19': '145457/19', '836-19': '155223/19', '837-19': '150743/19', '838-19': '385/19', '840-19': '92448/19', '841-19': '99684/19', '842-19': '99071/19', '843-19': '104999/19', '844-19': '857555/19', '845-19': '153075/19', '846-19': '158498/19', '848-19': '15248/19', '849-19': '146008/19', '850-19': '158435/19', '855-19': '153344/19', '859-19': '161204/19', '860-19': '160410/19', '862-19': '162099/19', '863-19': '76328/19', '864-19': '123869/19', '865-19': '159081/19', '866-19': '129211/19', '867-19': '121050/19', '869-19': '137536/19', '870-19': '144265/19', '871-19': '140232/19', '872-19': '159771/19', '873-19': '153473/19', '877-19': '111045/19', '878-19': '111219/19', '879-19': '159059/19', '881-19': '166196/19', '883-19': '159059/19', '884-19': '156072/19', '885-19': '161793/19', '886-19': '167195/19', '887-19': '167157/19', '889-19': '144708/19', '891-19': '951-952/19', '892-19': '161636/19', '894-19': '159102/19', '895-19': '163680/19', '896-19': '145431/19', '897-19': '158523/19', '898-19': '144214/19', '899-19': '145712/19', '900-19': '163537/19', '901-19': '159191/19', '905-19': '139086/19', '906-19': '158909/19', '908-19': '152598/19', '909-19': '152281/19', '910-19': '162211/19', '911-19': '155639/19', '912-19': '131082/19', '913-19': '170747/19', '914-19': '147677/19', '916-19': '126578/19', '917-19': '130183/19', '918-19': '146624/19', '919-19': '145605/19', '920-19': '157700/19', '922-19': '259/19', '923-19': '248/19', '924-19': '92161/19', '925-19': '163403/19', '933-19': '176650/19', '934-19': '168026/19', '935-19': '167978/19', '936-19': '170311/19', '937-19': '159614/19', '938-19': '163721/19', '939-19': '176884/19', '940-19': '176754/19', '941-19': '176527/19', '942-19': '173359/19', '943-19': '173822/19', '945-19': '175948/19', '946-19': '143448/19', '947-19': '140488/19', '948-19': '95421/19', '949-19': '150002/19', '950-19': '66848/19',
        '951-19': '143581/19', '952-19': '115707/19', '953-19': '176806/19', '955-19': '162948/19', '956-19': '179561/19', '957-19': '177936/19', '958-19': '179337/19', '959-19': '181652/19', '960-19': '174379/19', '961-19': '149949/19', '962-19': '150834/19', '963-19': '162644/19', '964-19': '157565/19', '966-19': '177184/19', '967-19': '181301/19', '968-19': '156289/19', '969-19':
        '170372/19', '970-19': '176288/19', '971-19': '162024/19', '972-19': '176514/19', '973-19': '170977/19', '974-19': '181477/19', '975-19': '107653/19', '980-19': '176514/19', '983-19': '174291/19', '985-19': '174424/19', '986-19': '161080/19', '987-19': '173652/19', '988-19': '180577/19', '989-19': '181238/19', '990-19': '174309/19', '991-19': '163701/19', '992-19': '177479/19', '994-19': '171019/19', '995-19': '52556/19', '996-19': '179285/19', '997-19': '180506/19', '998-19': '180879/19', '1000-19': '185604/19', '1001-19': '185530/19', '1004-19': '109390/19',
        '1005-19': '180401/19', '1006-19': '95352/19', '1007-19': '126618/19', '1008-19': '113138/19', '1009-19': '181420/19', '1010-19': '180161/19', '1011-19': '179445/19', '1012-19': '176507/19', '1013-19': '185563/19', '1014-19': '179234/19', '1015-19': '167629/19', '1016-19': '171053/19', '1017-19': '188799/19', '1018-19': '188913/19', '1019-19': '192053/19', '1020-19': '180834/19', '1021-19': '182640/19', '1022-19': '193751/19', '1023-19': '167729/19', '1024-19': '167602/19', '1026-19': '158102/19', '1027-19': '140456/19', '1028-19': '154871/19', '1029-19': '191295/19', '1030-19': '191690/19', '1031-19': '190044/19', '1032-19': '185063/19', '1033-19': '187531/19', '1034-19': '184881/19', '1035-19': '189084/19', '1036-19': '191564/19', '1038-19': '174006/19', '1039-19': '179260/19', '1040-19': '183900/19', '1042-19': '193102/19', '1043-19': '188329/19', '1046-19': '197255/19', '1047-19': '187889/19', '1048-19': '192100/19', '1049-19': '188569/19', '1050-19': '185891/19', '1051-19': '181627/19', '1052-19': '178784/19', '1053-19': '187510/19', '1054-19': '184921/19', '1055-19': '197162/19', '1056-19': '109259/19', '1057-19': '194119/19', '1058-19': '108034/19', '1059-19': '193707/19', '1060-19': '198023/19', '1063-19': '191684/19', '1064-19': '191834/19', '1066-19': '288/19', '1067-19': '277/19', '1068-19': '263/19', '1069-19': '190889/19', '1070-19': '150885/19', '1071-19': '179512/19', '1072-19': '185655/19', '1073-19': '203436/19', '1074-19': '203438/19', '1075-19': '200487/19', '1076-19': '196555/19', '1077-19': '196992/19', '1078-19': '198245 AC 198067/19', '1079-19': '190156/19', '1080-19': '194810/19', '1083-19': '197884/19', '1084-19': '187521/19', '1085-19': '194680/19', '1086-19': '193004/19', '1087-19': '154928/19', '1088-19': '173632/19', '1089-19': '173924/19', '1090-19': '161122/19', '1091-19': '170278/19', '1092-19': '198924/19', '1093-19': '204943/19', '1094-19': '184831/19', '1095-19': '201215/19', '1096-19': '204979/19', '1098-19': '126036/19', '1099-19': '174300/19', '1100-19': '199066/19', '1101-19': '203311/19', '1102-19': '170587/19', '1103-19': '203274/19', '1104-19': '199952/19 (AC. 196768/19)', '1105-19': '195581/19', '1106-19': '201685/19', '1108-19': '518/19', '1109-19': '207322/19', '1110-19': '193012/19', '1114-19': '203655/19', '1116-19': '197594/19', '1117-19': '203752/19', '1118-19': '151698/19', '1119-19': '189781/19', '1120-19': '201629/19', '1121-19': '187046/19', '1122-19': '170200/19', '1126-19': '189037/19', '1127-19': '192105/19', '1128-19': '185808/19', '1129-19': '196588/19', '1130-19': '194384/19', '1131-19': '207764/19', '1132-19': '204515/19', '1133-19': '206805/19', '1134-19': '198466/19', '1141-19': '215558/19', '1142-19': '215082/19', '1144-19': '215586/19', '1145-19': '215515/19', '1146-19': '213998/19', '1147-19': '214946/19', '1148-19': '210198/19', '1149-19': '207753/19 (AC. 207273/19)', '1150-19': '212619/19', '1151-19': '184915/19', '1152-19': '207652/19', '1153-19': '215568/19', '1154-19': '216168/19 (AC. 215307/19)', '1155-19': '216688/19', '1158-19': '213087/19', '1159-19': '206838/19', '1160-19': '174246/19', '1162-19': '158214/19', '1163-19': '194498/19', '1164-19': '194436/19', '1165-19': '196607/19',
        '1166-19': '170855/19', '1167-19': '191828/19', '1168-19': '196453/19', '1169-19': '203474/19', '1170-19': '213705/19', '1171-19': '68542/19', '1172-19': '213511/19', '1173-19': '214873/19', '1174-19': '216240/19', '1175-19': '212482/19', '1176-19': '215977/19 (AC. 215084/19)', '1177-19': '197248/19', '1178-19': '204237/19', '1179-19': '200371/19', '1180-19': '204297/19', '1181-19': '203039/19', '1182-19': '212242/19', '1183-19': '211866/19', '1184-19': '210258/19', '1185-19': '191482/19', '1186-19': '211868/19', '1187-19': '189054/19', '1188-19': '193310/19',
        '1189-19': '187669/19', '1190-19': '194761/19', '1191-19': '197846/19', '1192-19': '219181/19', '1193-19': '219506/19', '1194-19': '219749/19', '1195-19': '219358/19', '1198-19': '222450/19', '1199-19': '13777/19 AC,113395/19', '1200-19': '155984/19', '1201-19': '84613/19', '1202-19': '192230/19', '1205-19': '124952/19', '1206-19': '209617/19', '1207-19': '219713/19 AC. 1557/19', '1208-19': '219806/19 AC. 1558/19', '1209-19': '213697/19', '1212-19': '209772/19', '1213-19': '219126/19', '1214-19': '204603/19', '1215-19': '207137/19', '1216-19': '219127/19', '1217-19': '210481/19', '1218-19': '225289/19', '1219-19': '213676/19', '1220-19': '221176/19', '1221-19': '222243/19', '1222-19': '319/19 GAP 212957/19', '1223-19': '305/19 GAP 205292/19', '1224-19': '202992/19', '1226-19': '216023/19', '1227-19': '201735/19', '1228-19': '204402/19', '1229-19': '197769/19', '1230-19': '216696/19', '1231-19': '218616/19', '1232-19': '198843/19',
        '1233-19': '213730/19', '1234-19': '216506/19', '1235-19': '185652/19', '1238-19': '225224/19', '1239-19': '202302/19', '1240-19': '212684/19', '1241-19': '211953/19', '1242-19': '175475/19', '1243-19': '217942/19', '1245-19': '222199/19', '1246-19': '224940/19', '1247-19': '225738/19', '1248-19': '225970/19', '1249-19': '81763/19', '1250-19': '224038/19', '1251-19': '178633/19', '1252-19': '196575/19', '1253-19': '72546/19', '1254-19': '197118/19', '1255-19': '212556/19', '1256-19': '214654/19', '1257-19': '194497/19', '1258-19': '206416/19', '1259-19': '203162/19', '1260-19': '214899/19', '1268-19': '224873/19', '1269-19': '228097/19', '1270-19': '228082/19', '1274-19': '228339/19', '1283-19': '228198/19', '1284-19': '231527/19', '1285-19': '2249403/19', '1286-19': '201795/19', '1287-19': '196699/19', '1288-19': '207118/19', '1289-19': '231358/19', '1290-19': '72546/19', '1291-19': '227857/19', '1292-19': '233934/19', '1293-19':
        '233150/19', '1294-19': '233206/19', '1295-19': '231907/19 (AC. 231420/19)', '1302-19': '232830/19', '1303-19': '232830/19', '1304-19': '227917/19', '1305-19': '222359/19', '1306-19': '223963/19', '1307-19': '217613/19', '1309-19': '236692/19 ', '1310-19': '228920/19', '1311-19': '220219/19', '1312-19': '219224/19', '1313-19': '222027/19', '1315-19': '224913/19', '1316-19': '219226/19', '1317-19': '230061/19', '1318-19': '227963/19', '1319-19': '236932/19', '1320-19': '212333/19', '1321-19': '205245/19', '1324-19': '233196/19', '1325-19': '222507/19', '1326-19': '222688/19', '1327-19': '219443/19', '1329-19': '236481/19', '1330-19': '228941/19', '1331-19': '230330/19', '1332-19': '236946/19', '1333-19': '231608/19 (AC. 230395/19)', '1334-19': '236181/19', '1336-19': '202167/19', '1337-19': '206669/19', '1338-19': '228620/19', '1339-19': '225724/19', '1340-19': '222731/19', '1342-19': '236764/19', '1343-19': '222477/19', '1344-19':
        '224646/19', '1345-19': '225443/19', '1348-19': '237340/19', '1350-19': '196588/19', '1351-19': '215826/19', '1352-19': '239680/19', '1354-19': '244659/19', '1355-19': '227720/19', '1356-19': '231500/19', '1357-19': '245359/19', '1359-19': '242899/19', '1360-19': '233874/19', '1361-19': '238391/19', '1362-19': '233853/19', '1363-19': '238560/19', '1364-19': '206979/19', '1365-19': '339/19', '1366-19': '355/19', '1368-19': '236601/19', '1369-19': '240234/19', '1370-19': '243153/19', '1371-19': '239868/19', '1372-19': '245710/19', '1373-19': '173837/19', '1374-19': '222817/19 AC.221853/19', '1380-19': '244261/19', '1381-19': '246310/19', '1382-19': '245904/19', '1383-19': '42106/19 AC 242095/19', '1385-19': '245791/19', '1386-19': '245111/19', '1387-19': '248429/19', '1388-19': '239451/19', '1389-19': '247491/19', '1390-19': '249040/19', '1391-19': '242744/19', '1394-19': '248604/19', '1397-19': '254629/19', '1398-19': '254865/19', '1399-19': '225088/19', '1400-19': '231008/19', '1401-19': '242549/19', '1402-19': '250940/19', '1403-19': '244814/19', '1404-19': '231392/19', '1405-19': '244435/19', '1406-19': '251536/19', '1407-19': '245727/19', '1408-19': '253825/19', '1409-19': '236094/19', '1410-19': '235426/19', '1411-19': '240014/19', '1412-19': '240072/19', '1413-19': '236745/19', '1417-19': '254102/19', '1418-19': '251680/19', '1419-19': '161386/19', '1420-19': '240406/19', '1421-19': '253855/19', '1422-19': '257145/19', '1423-19': '241757/19', '1424-19': '242992/19', '1425-19': '242703/19', '1426-19': '242795/19', '1427-19': '241920/19', '1429-19': '243558/19', '1431-19': '239998/19', '1432-19': '238927/19', '1433-19': '228285/19', '1434-19': '243242/19', '1435-19': '243049/19', '1436-19': '251534/19', '1437-19': '161933/19', '1438-19': '160145/19', '1439-19': '247193/19', '1440-19': '247006/19', '1441-19': '260068/19', '1442-19': '258827/19', '1443-19': '260141/19', '1444-19': '259806/19', '1450-19': '249944/19', '1451-19': '248699/19', '1452-19': '252996/19', '1453-19': '241781/19', '1454-19': '241672/19', '1455-19': '242606/19', '1457-19': '133/19 (MPF00267389)', '1459-19': '260461/19', '1465-19': '251822/19 AC 242852/19 ', '1466-19': '260239/19', '1467-19': '225510/19', '1468-19': '259930/19', '1469-19': '252354/19', '1470-19': '361/19 GAP 251.152/19', '1471-19': '375/19 GAP 257.193/19', '1472-19': '370/19 GAP 254.134/19', '1473-19': '382/19 GAP 260.117/19', '1474-19': '257469/19', '1475-19': '264520/19',
        '1476-19': '262686/19', '1480-19': '361-71000.358/19 MPF 00271092/19', '1482-19': '266880/19', '1484-19': '251731/19', '1485-19': '231139/19', '1486-19': '231089/19', '1487-19': '250656/19', '1489-19': '254779/19', '1490-19': '265319/19', '1491-19': '267286/19', '1492-19': '267706/19', '1493-19': '263892/19', '1496-19': '257864/19', '1497-19': '251802/19', '1499-19': '224511/19', '1500-19': '242714/19', '1501-19': '243132/19', '1502-19': '246844/19', '1503-19': '251526/19', '1509-19': '268196/19', '1511-19': '264115/19', '1512-19': '265663/19', '1513-19': '236671/19', '1514-19': '237306/19', '1515-19': '268490/19', '1517-19': '255026/19', '1518-19': '263010/19', '1519-19': '264733/19 AC.264397/19', '1520-19': '231376/19', '1521-19': '237610/19 AC.237151/19', '1522-19': '258134/19', '1523-19': '259947/19', '1524-19': '233434/19', '1525-19': '274548/19', '1526-19': '271777/19', '1527-19': '244848/19', '1528-19': '271428/19', '1529-19': '262603/19', '1530-19': '264813/19', '1531-19': '245319/19 AC.244168/19', '1532-19': '261298/19', '1536-19': '274829/19', '1537-19': '271603/19', '1539-19': '275561/19', '1540-19': '246764/19', '1541-19': '264/19', '1542-19': '263/19', '1544-19': '192832/19', '1545-19': '194333/19', '1546-19': '191297/19', '1547-19': '259409/19 (AC. 248358/19)', '1548-19': '257076/19', '1549-19': '180061/19', '1550-19': '256764/19 (AC. 262119/19)', '1551-19': '217885/19 (AC. 270628/19)', '1553-19': '269888/19', '1554-19': '266634/19', '1555-19': '2672624/19', '1556-19': '271798/19', '1557-19': '257743/19', '1558-19': '257452/19', '1559-19': '114342/19', '1563-19': '243534/19', '1564-19': '243231/19', '1565-19': '276468/19', '1568-19': '278232/19', '1569-19': '278032/19', '1570-19': '270238/19', '1571-19': '277975/19', '1572-19': '262694/19', '1573-19': '281647/19', '1574-19': '276414/19', '1575-19': '263065/19', '1576-19': '279241/19', '1577-19': '270737/19', '1578-19': '282669/19', '1580-19': '273909/19', '1581-19': '276676/19', '1586-19': '242580/19', '1587-19': '249920/19', '1588-19': '256405/19', '1589-19': '251263/19', '1590-19': '254026/19', '1591-19': '254365/19', '1592-19': '253085/19', '1593-19': '253817/19', '1595-19': '258512/19', '1596-19': '257110/19', '1597-19': '258287/19', '1598-19': '255741/19', '1599-19': '267659/19', '1600-19': '257291/19', '1602-19': '283338/19', '1603-19': 'C.15559/19 S.468550/18', '1604-19': '283320/19', '1605-19': '285131/19', '1606-19': '275204/19', '1607-19':
        '260530/19', '1609-19': '284848/19', '1610-19': '259349/19', '1611-19': '285138/19', '1612-19': '276515/19', '1613-19': '270989/19 AC.270527/19', '1614-19': '280458/19', '1615-19': '114242/19', '1616-19': '247362/19', '1617-19': '268139/19 AC.267860/19', '1618-19': '225302/19', '1619-19': '232248/19', '1620-19': '244994/19 AC.244751/19', '1621-19': '280188/19', '1622-19': '288295/19', '1623-19': '282470/19', '1624-19': '268172/19', '1625-19': '249886/19', '1626-19': '254443/19', '1627-19': '257409/19', '1628-19': '267835/19', '1630-19': '277860/19', '1631-19':
        '277860/19', '1632-19': '97/19 MPF 255242', '1633-19': '288757/19', '1634-19': '276220/19', '1635-19': '286376/19', '1636-19': '287585/19', '1637-19': '269420/19', '1641-19': '291657/19 (AC. 291034/19)', '1642-19': '291061/19', '1643-19': '131568/19', '1644-19': '391/19 GAP 267.837', '1645-19': '400/19 GAP 271.522', '1648-19': '123822/19', '1649-19': '290848/19', '1650-19': '287946/19', '1651-19': '282468/19', '1652-19': '290851/19', '1656-19': '287931/19', '1657-19': '213749/19', '1661-19': '294648/19', '1662-19': '295580/19', '1669-19': '294523/19', '1670-19': '243225/19', '1671-19': '282298/19', '1672-19': '185183/19', '1675-19': '293334/19', '1676-19': '293550/19', '1677-19': '299254/19', '1678-19': '260365/19', '1679-19': '260419/19', '1680-19': '288187/19', '1685-19': '299327/19', '1686-19': '288396/19', '1689-19': '294835/19', '1690-19': '302293/19', '1691-19': '289922/19', '1692-19': '295989/19', '1693-19': '299192/19', '1694-19': '290560/19', '1695-19': '294799/19', '1699-19': '295912/19', '1700-19': '302574/19 AC.301059/19', '1701-19': '302554/19 AC.300986/19', '1702-19': '302448/19', '1706-19': '290312/19', '1707-19': '295293/19 (AC. 294341/19)', '1708-19': '299433/19', '1709-19': '299210/19', '1710-19': '2394574/19', '1711-19': '292606/19', '1712-19': '301907/19', '1713-19': '304360/19', '1714-19': '273289/19', '1715-19': '270487/19', '1716-19': '287398/19', '1717-19': '273178/19', '1718-19': '193268/19', '1719-19': '285191/19', '1720-19': '270203/19', '1721-19': '276119/19', '1722-19': '215147/19', '1723-19': '286964/19', '1724-19': '302171/19', '1725-19': '288412/19', '1727-19': '298925/19', '1728-19': '299147/19', '1729-19': '302657/19', '1730-19': '301574/19', '1731-19': '304237/19', '1732-19': '295063/19', '1733-19': '301500/19', '1734-19': 'J01938-2019-0307035 (SRIO INT 53/2019)', '1735-19': '288145/19', '1736-19': '307936/19', '1737-19': '305227/19', '1741-19': '308232/19 AC.307890/19', '1745-19': '276630/19', '1746-19': '307419/19', '1747-19': '308106/19', '1750-19': '312353', '1752-19': '310571/19', '1753-19': '304737/19', '1754-19': '308007/19', '1760-19': '309996/19', '1761-19': '312077/19', '1762-19': '307673/19', '1763-19': '306564/19', '1764-19': '312441/19', '1765-19': '311030/19', '1766-19': '312916/19', '1767-19': '299224/19', '1768-19': '307137/19', '1769-19': '315716/19', '1770-19': '314940/19', '1771-19': '315805/19', '1772-19': '276469/19', '1773-19': '304539/19', '1774-19': '270174/19', '1775-19': '311463/19', '1776-19': '117160/19', '1777-19': '301802/19', '1778-19': '318459/19', '1779-19': '311729/19', '1784-19': '318469/19', '1785-19': '302040/19', '1786-19': '318236/19', '1787-19': '306992/19', '1788-19': '309789/19', '1789-19': '312904/19', '1790-19': '298486/19', '1792-19': '173175/19', '1793-19': '138972/19', '1794-19': '230898/19', '1795-19':
        '318367/19', '1796-19': '315629/19', '1800-19': '310592/19', '1801-19': '310388/19', '1804-19': '317871/19', '1805-19': '316804/19', '1806-19': '315336/19', '1807-19': '318031/19', '1808-19': '317871/19', '1809-19': '312744/19', '1810-19': '2320669/19', '1813-19': '317871/19', '1814-19': '271165/19', '1815-19': '304967/19', '1816-19': '310527/19', '1817-19': '200446/19', '1819-19': '320649/19', '1824-19': '322078/19', '1825-19': '322531/19', '1826-19': '322506/19', '1827-19': '310562/19', '1828-19': '320386/19', '1829-19': '319437/19', '1830-19': '323564/19', '1831-19': '320915/19', '1832-19': '323680/19', '1833-19': '320458/19', '1834-19': '323723/19 (INT. 2251/19)', '1836-19': '310260/19', '1838-19': '328590/19 (AC. 328078/19)', '1839-19': '318233/19', '1840-19': '304347/19', '1841-19': '158982/19', '1842-19': '304135/19', '1843-19': '326900/19', '1844-19': '326111/19', '1845-19': '320719/19', '1846-19': '323226/19', '1847-19': '319386/19', '1848-19': '307959/19', '1850-19': '300784/19', '1853-19': '327961/19', '1854-19': '325669/19', '1855-19': '327495/19', '1856-19': '328159/19', '1857-19': '331086/19', '1858-19': '326124/19', '1859-19': '331310/19', '1860-19': '328423/19', '1861-19': '326209/19', '1862-19': '332461/19', '1863-19': '327950/19', '1864-19': '333445/19', '1865-19': '330188 - 332617/19', '1869-19': '333697/19', '1870-19': '293302/19', '1871-19': '299041/19', '1872-19': '305840/19', '1873-19': '301338/19', '1874-19': '306750/19', '1875-19': '320622/19', '1876-19': '306909/19', '1877-19': '317782/19', '1878-19': '318030/19', '1879-19': '323225/19', '1880-19': '237225/19', '1881-19': '334134/19', '1882-19': '333697/19', '1883-19': '335826/19', '1885-19': '323089/19', '1886-19': '323300/19', '1887-19': '317265/19', '1888-19': '331085/19', '1889-19': '323518/19', '1890-19': '325801/19', '1891-19': '3235161/19', '1892-19': '322190/19', '1893-19':
        '323266/19', '1894-19': '319575/19', '1895-19': '335817/19', '1901-19': '312887/19', '1904-19': '317753/19', '1905-19': '310563/19', '1906-19': '308092/19', '1907-19': '298599/19', '1909-19': '315780/19', '1910-19': '299371/19', '1911-19': '254499/19', '1912-19': '243381/19', '1913-19': '270892/19', '1914-19': '482/19 (GAP. 325751/19)', '1915-19': '486/19 (GAP. 330759/19)', '1916-19': '456/19 (GAP. 315310/19)', '1917-19': '240202/19', '1918-19': '216896/19', '1919-19': '231323/19', '1920-19': '224872/19', '1921-19': '191422/19', '1922-19': '240659/19', '1923-19': '205647/19', '1924-19': '207197/19', '1925-19': '240580/19', '1926-19': '210473/19', '1928-19': '338805/19', '1929-19': '318361/19', '1930-19': '330193/19', '1931-19': '320935/19', '1932-19': '338466/19', '1933-19': '333563/19', '1934-19': '320749/19', '1935-19': '338583/19', '1936-19': '331353/19', '1937-19': '307791/19', '1938-19': '311747/19', '1939-19': '335470/19', '1940-19': '319233/19', '1944-19': '497/2019 GAP340401/19', '1945-19': '338869/19', '1946-19': '334172/19', '1947-19': '341789/19', '1948-19': '340719/19', '1949-19': '340975/19', '1950-19':
        '341440/19', '1951-19': '327056/19', '1952-19': '330141/19', '1959-19': '341797/19', '1960-19': '344148/19', '1961-19': '317318/19', '1962-19': '336957/19', '1963-19': '332056/19', '1964-19': '333451/19', '1965-19': '325305/19', '1966-19': '323179/19', '1968-19': '326227/19', '1969-19': '323122/19', '1970-19': '320786/19', '1972-19': '170982/19', '1973-19': '343993/19', '1974-19': '341349/19', '1975-19': '333505/19', '1976-19': '276441/19', '1977-19': '182494/19', '1978-19': '204638/19', '1979-19': '259331/19', '1980-19': '343221/19', '1981-19': '341288/19', '1983-19': '254347/19', '1984-19': '257348/19', '1986-19': '349423/19', '1987-19': '349456/19', '1988-19': '341160/19', '1992-19': '503/19 GAP 349.133', '1993-19': '349241/19', '1994-19': '349762/19', '1996-19': '347010/19', '1997-19': '335398/19', '1998-19': '343354/19', '1999-19': '342510/19', '2000-19': '341126/19', '2001-19': '340956/19', '2002-19': '346799/19', '2003-19':
        '271353/19', '2004-19': '308066/19', '2005-19': '349724/19', '2006-19': '340956/19', '2008-19': '351919/19', '2009-19': '352526/19', '2013-19': '244399/19', '2017-19': '324527/19', '2018-19': '334008/19', '2019-19': '326647/19', '2020-19': '350130/2019 - CAUSA4512', '2021-19': '347119/19', '2022-19': '346614/19', '2023-19': '132555/19', '2024-19': '341342/19', '2025-19': '335595/19', '2026-19': '346201/19', '2027-19': '348716/19', '2029-19': '349798/19', '2034-19': '2015/19 GAP 356302/19', '2035-19': '354942/19 AC 357534/19', '2036-19': '358067/19 AC 357405/19', '2037-19': '358070/19 AC 357230/19', '2038-19': '358929/19', '2039-19': '346696/19', '2040-19': '3252237/19', '2041-19': '342877/19', '2042-19': '354697/19', '2044-19': '335717/19', '2045-19': '340620/19', '2046-19': '349918/19', '2047-19': '320074/19', '2048-19': '309842/19', '2057-19': '339570/19', '2058-19': '349744/19', '2059-19': '354678/19', '2062-19': '293100/2019',
        '2063-19': '335763/19', '2064-19': '304243/2019', '2065-19': '11942/17', '2066-19': '1292/18', '2067-19': '498/18', '2068-19': '472/18', '2069-19': '537/18', '2070-19': '1956/17', '2071-19': '11201/18', '2072-19': '9179/15', '2073-19': '21639/18', '2074-19': '1795/16', '2075-19': '363429/19', '2077-19': '363328/2019', '2079-19': '342284/19', '2080-19': '357291/19', '2085-19': '359344/2019', '2086-19': '358836/2019', '2087-19': '349557/2019', '2088-19': '369121/2019', '2089-19': '359392/2019', '2090-19': '352497/2019', '2091-19': '357588/19', '2092-19': '355056/2019', '2094-19': '368269/2019', '2095-19': '356696/2019', '2099-19': '365996/19', '2100-19': '161900/19', '2101-19': '3446672/19', '2102-19': '370756/19', '2104-19': '333135/19', '2105-19': '368693/19', '2106-19': '357050/19', '2107-19': '335365/19', '2108-19': '358906/19', '2110-19': '368119/19', '2111-19': '371775/19', '2115-19': '341518/19', '2116-19': '371452/19', '2117-19': '16212/19', '2118-19': '368973/19', '2121-19': '369251/19', '2222-19': '394857/19', '2123-19': '325332/19 MPF267220', '2124-19': '374125/2019', '2125-19': '373473/2019', '2126-19': '1012/2019', '2127-19': '373861/2019', '2132-19': '374435/19', '2133-19': '371716/19 (INT 2476)', '2134-19': '369054/19 (INT 2463)', '2135-19': '363286/19', '2136-19': '335709/19', '2137-19':
        '541/19', '2140-19': '526/19', 
        '2141-19': '507/19 (GAP 349380)', 
        '2142-19': '516/19 (GAP 352392)', '2143-19': '360316/19', '2144-19': '334136/19', '2145-19': '348410/19', '2146-19': '349717/19', '2147-19': '2095/19 (GAP 375653) (A.C. 2093/19 GAP 375057)', '2150-19': '379652/19', '2151-19': '366140/2019', '2152-19': '341687/2019', '2153-19': '347169/2019', '2154-19': '326783/2019', '2155-19': '363181/2019', '2156-19': '376351/2019', '2157-19': '376792/2019', '2158-19': '374506/2019', '2159-19': '363418/19', '2160-19': '368770/2019', '2161-19': '359151/19', '2162-19': '357981/2019', '2163-19': '349093/2019', '2164-19': '176769/2019', '2165-19': '380052/2019', '2169-19': '379312/2019', '2170-19': '368192/2019', '2171-19': '375912/2019', '2173-19': '3711462019', '2174-19': '367449/2019', '2175-19': '382781/2019', '2176-19': '383992/2019', '2177-19': '368912/2019', '2179-19': '357958/2019', '2180-19': '379745/2019', '2181-19': '379356/2019', '2182-19': '379715/19', '2183-19': '265395/19', '2184-19': '270096/19', '2185-19': '247357/19', '2186-19': '253414/19', '2189-19': '336401/19', '2190-19': '383569/19', '2191-19': '349265/19', '2192-19': '349149/19', '2193-19': '342398/19', '2194-19': '342398/19', '2195-19': '368902/19', '2197-19': '386793/19', '2198-19': '386988/19', '2199-19': '387037/19', '2200-19': '386852/19 (INT 1365)', '2201-19': '379736/2019', '2202-19': '379583/2019', '2203-19': '380686/2019', '2204-19': '372265/2019', '2205-19': '380584/2019', '2206-19': '386445/2019', '2207-19': '382322/2019', '2209-19': '392176/2019', '2210-19': '392079/2019', '2211-19': '383840/2019', '2212-19': '383461/2019', '2213-19': '382523/2019', '2214-19': '392068/2019', '2218-19': '387320/2019', '2219-19': '392095/2019', '2221-19': '391429/19', '2224-19': '393532/19', '2226-19': '212881/19', '2227-19': '386607/19', '2228-19': '379954/19', '2233-19': '394670/19',
        '2234-19': '231095/19', '2235-19': '397606/19', '2237-19': '398019/19', '2238-19': '396966/19', '2243-19': '2110/19 GAP 381418/19', '2244-19': '391353/2019', '2245-19': '381734/2019', '2246-19': '397433/2019',
        '2247-19': '397557/2019', '2248-19': '397629/2019', '2249-19': '392268/2019', '2250-19': '381982/2019', '2251-19': '383629/2019', '2259-19': '1181/2019', '2260-19': '346497/2019', '2261-19': '399603/2019', '2262-19': '400579/2019', '2263-19': '401937/19', '2264-19': '550/219', '2265-19': '5672019', '2266-19': '560/2019', '2267-19': '404435/2019', '2268-19': '405594/2019', '2269-19': '404411/2019', '2270-19': '405204/2019', '2274-19': '400054/2019', '2275-19': '391524/2019', '2276-19': '400722/2019', '2277-19': '263702/2019', '2278-19': '401212/2019', '2279-19': '401925/2019', '2280-19': '402451/2019', '2281-19': '270093/2019', '2282-19': '272576/2019', '2283-19': '297467/2019', '2284-19': '269777/2019', '2285-19': '269149/2019', '2286-19': '269989/2019', '2288-19': '341169/2019', '2289-19': '341000/2019', '2290-19': '320764/2019', '2291-19': '302078/2019', '2292-19': '333898/2019', '2293-19': '382010/2019', '2294-19': '395632/2019', '2298-19': '383854/2019', '2299-19': '383574/2019', '2300-19': '382396/2019', '2301-19': '391268/2019', '2302-19': '405329/2019', '2304-19': '410639/2019', '2311-19': '400628/19',
        '2312-19': '413339/39', '2313-19': '388032/19', '2314-19': '373411/19', '2315-19': '327662/19', '2316-19': '407327/19',
        '2317-19': '323131/19', '2318-19': '118574/19', '2319-19': '379816/19', '2320-19': '320869/19', '2321-19': '412986/19', 
        '2322-19': '374435/19', '2323-19': '381769/19', '2324-19': '380677/19', '2325-19': '374338/19', '2328-19': '2246/19 – GAP 413140/19 – 1957/19 – GAP 344680/19',
        '2329-19': '404125/19', '2330-19': '407807/19', '2331-19': '399722/19', '2332-19': '412589/2019', '2333-19': '415561/2019', '2334-19': '408863/2019', '2335-19': '412303/2019', '2336-19': '403704/2019', '2337-19': '409043/2019', '2338-19': '409043/2019', '2340-19': '409051/19', '2341-19': '417042/19', '2343-19': '418165/19', '2344-19': '421679/19', '2347-19': '42201/19', '2349-19': '415191/19', '2352-19': '408994/19 (AC. 241884/19)', '2353-19': '410109/19', '2356-19': '418353/19', 'SA0001-19': '402456/2019', 'SA0002-19': '415217/2019',
        'SA0003-19': '412269/2019', 'SA0004-19': '425685/2019', 'SA0005-19': '97815/2019', 'SA0006-19': '418493/2019', 'SA0007-19': 'MPF 318184', 'SA0008-19': '419880/2019', 'SA0009-19': '417994/2019', 'SA0010-19': '282843/2019', 'SA0011-19': '419203/2019 – AC 419864/2019', 'SA0011': '419203/2019 – AC 419864/2019'}
APERTURAS={}

for root, dirs, files in os.walk(Letra_Disco_Compartido+':\\'):
        for name in files:
                if name =='PLANILLA ODI_92 LABORATORIO QUIMICO.xlsx':
                        filepath_name=os.path.join(root, name)
                        wb = openpyxl.load_workbook(filepath_name)
                        ws=wb['Formulario']
                        for rowNum in range (10788, ws.max_row+1):
                                if not ws.cell(row=rowNum, column=2).value==None :
                                        if not ws.cell(row=rowNum, column=8).value==None :                                                        
                                                        APERTURAS[str(ws.cell(row=rowNum, column=2).value)+'-19']=str(ws.cell(row=rowNum, column=8).value)
                        wb.close()

#----------------------------------------------------------------------------------------------------------------
#Aca abre el explorador

try:
        driver = webdriver.Chrome()
        driver.get('https://eu-pr.apps.buenosaires.gob.ar/eu-web/')
        driver.find_element_by_id("user-input").send_keys('20261657962')
except:
        print('Error al abrir la Numero_de_Pagina_actualina del SADE')  

#----------------------------------------------------------------------------------------------------------------
#Esto es para bypasear el Captcha
input('Cuando pases el Captcha, apreta enter(Onda, soy un robot. Esos Captcha dan miedo)   ')
#----------------------------------------------------------------------------------------------------------------
#LLOGEO AL EE                 
driver.find_element_by_id('pass-input').send_keys('Nubia007')
driver.find_element_by_id("ddjj-login-form").submit()
window_before = driver.window_handles[0]
driver.execute_script("window.open('http://eue.gcba.gob.ar/expedientes-web/', 'new window')")
window_after = driver.window_handles[1]
driver.switch_to.window(window_after)
time.sleep(1)
xpath_send(('//*[@id="username"]'),'20261657962')
driver.find_element_by_id('password').send_keys('Nubia007')
driver.find_element_by_id('password').submit()
while True:
        input('Aplique los filtros que desee y apriete cualquier tecla para arrancar. \n')
        Numero_de_paginas_maximo_en_el_intervalo_elegido=driver.find_element_by_xpath('//*/table/tbody/tr/td[6]/span').text
        Numero_de_paginas_maximo_en_el_intervalo_elegido=Numero_de_paginas_maximo_en_el_intervalo_elegido.split()
        Numero_de_paginas_maximo_en_el_intervalo_elegido=Numero_de_paginas_maximo_en_el_intervalo_elegido[1]

                #inicio del pase
                #ENCONTRAR LA MANERA DE SETEAR LOS FILTROS DESDE LA CONSOLA
                #-----------------------------
                #primero definimos que cooperacion vamos a buscar
        Es_el_Primer_expediente=True
        Punto_de_inicio=input('Si desea arrancar desde el principio, aprete enter. Si no, introduzca  el numero de fila y el numero de Pagina separado por un guion. Ejemplo, el tercer expediente de la segunda Pagina seria 3-2 (no es muy complicado, no?)  ')  
        if Punto_de_inicio !='':
                Punto_de_inicio=Punto_de_inicio.split('-')
                Numero_de_Pagina_actual=int(Punto_de_inicio[1])-1
        else:
                Numero_de_Pagina_actual=0
        while int(Numero_de_paginas_maximo_en_el_intervalo_elegido)>Numero_de_Pagina_actual:
                Numero_de_Pagina_actual+=1
                Numero_de_Fila=1
                if Punto_de_inicio !='':
                        if Punto_de_inicio[0] !='1':
                                Numero_de_Fila= int(Punto_de_inicio[0])
                                Punto_de_inicio[0]='1'
                Numero_de_filas_maximo=11
                while Numero_de_filas_maximo>= Numero_de_Fila:                     
                        Repetir_ubicacion_de_expediente=True 
                        while True:
                                if Repetir_ubicacion_de_expediente==False:
                                        Numero_de_Fila+=1
                                        break
                                if Es_el_Primer_expediente==True:
                                        #PRIMERA VEZ QUE SE DEFINE LA "VARIABLE MAGICA". SINCERAMENTE? NO SE, PERO SI ABRISTE YA UN EXPEDIENTE CAMBIAN LOS NUMEROS A SI ESTA "SIN TOCAR".
                                        #PORQUE? NO LO SE LISA.
                                        Variable_Magica='7'
                                else:
                                        Variable_Magica='6'
                                xpath_send('/html[1]/body[1]/div[1]/div[4]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[{}]/table[1]/tbody[1]/tr[1]/td[5]/input[1]'.format(Variable_Magica),str(Numero_de_Pagina_actual))
                                xpath_enter('/html[1]/body[1]/div[1]/div[4]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[{}]/table[1]/tbody[1]/tr[1]/td[5]/input[1]'.format(Variable_Magica))
                                time.sleep(3) 
                                if Es_el_Primer_expediente==True: 
                                        Variable_Magica='8'
                                else:
                                        Variable_Magica='7'  
                                for Numero_de_filas_maximo_en_esta_hoja in range(10,0,-1):
                                        try:
                                                if driver.find_element_by_xpath('/html[1]/body[1]/div[1]/div[4]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[{}]/div[2]/table[1]/tbody[2]/tr[{}]/td[10]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[3]/span[1]'.format(Variable_Magica,str(Numero_de_filas_maximo_en_esta_hoja))).is_displayed():
                                                        Numero_de_filas_maximo=Numero_de_filas_maximo_en_esta_hoja
                                                        break
                                        except:
                                                continue
                                xpath_click('/html[1]/body[1]/div[1]/div[4]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[{}]/div[2]/table[1]/tbody[2]/tr[{}]/td[10]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[3]/span[1]'.format(Variable_Magica,str(Numero_de_Fila)))
                                time.sleep(2)
                                breakerino=False
                                Encontro_IF=False
                                for orden in range (2,50):
                                        if breakerino==True:
                                                break
                                        try:
                                                if Es_el_Primer_expediente==True:
                                                        Variable_Magica='3'
                                                else:
                                                        Variable_Magica='4'
                                                tipo_de_documento=driver.find_element_by_xpath('/html[1]/body[1]/div[{}]/div[3]/div[1]/div[1]/div[1]/div[2]/div[2]/div[1]/div[1]/div[3]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/table[1]/tbody[2]/tr[{}]/td[2]/div[1]'.format(Variable_Magica,str(orden))).text
                                                Encontro_IF=False                                                
                                                if tipo_de_documento=='IF - Informe gráfico' or tipo_de_documento=='IF - Anexo':
                                                        Encontro_IF=True
                                                        if Es_el_Primer_expediente==True:
                                                                Variable_Magica='3'
                                                        else:
                                                                Variable_Magica='4'       
                                                        botoncito='/html[1]/body[1]/div[{}]/div[3]/div[1]/div[1]/div[1]/div[2]/div[2]/div[1]/div[1]/div[3]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/table[1]/tbody[2]/tr[{}]/td[7]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[3]/img[1]'.format( Variable_Magica,str(orden))
                                                        xpath_click(botoncito)
                                                        time.sleep(2)
                                                        while True:                               
                                                                try:
                                                                        driver.switch_to.frame(driver.find_element_by_xpath('/html[1]/body[1]/div[6]/div[3]/div[1]/div[1]/div[1]/iframe[1]'))
                                                                        _=driver.find_elements_by_css_selector('span.z-tab-text')
                                                                        for element in _:
                                                                                if element.text=='Previsualizar':
                                                                                        element.click()
                                                                                        _='break'
                                                                                        break
                                                                        if _=='break':
                                                                                break                                                                                                         
                                                                except:
                                                                        timer+=1
                                                                        if timer > 20:
                                                                                break                        
                                                                        continue  
                                                        driver.switch_to.default_content()    
                                                        Cooperacion='Error de Lectura'
                                                        numero_sumario='Error de Lectura'  
                                                        time.sleep(3)            
                                                        while True:                              
                                                                Cooperacion=input('Introduzca el numero de cooperacion(incluyendo el -18 o -19) o el sumario(incluyendo el /18 o /19). Si esta cooperacion no es de Ley, aprete enter   ').upper()
                                                                breakerino=True
                                                                if Cooperacion =='':                                                        
                                                                        xpath_click('/html[1]/body[1]/div[6]/div[2]/div[1]/div[1]/div[1]/div[1]')
                                                                        time.sleep(2)
                                                                        if Es_el_Primer_expediente==True: 
                                                                                xpath_click('/html[1]/body[1]/div[3]/div[3]/div[1]/div[1]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[19]/div[1]/div[1]/div[1]/img[1]')
                                                                        else:
                                                                                xpath_click('/html[1]/body[1]/div[4]/div[3]/div[1]/div[1]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[19]/div[1]/div[1]/div[1]/img[1]')
                                                                        time.sleep(2)
                                                                        Repetir_ubicacion_de_expediente=False
                                                                        Es_el_Primer_expediente='Claro, porque esto tiene sentido'                                             
                                                                        break
                                                                else:
                                                                        Repetir_ubicacion_de_expediente=True
                                                                        Es_el_Primer_expediente='Claro, porque esto tiene sentido'
                                                                        if Cooperacion =='EXIT':
                                                                                input('Programa terminado, presione cualquier cosa para finalizar')
                                                                                exit() 
                                                                        if '/' in Cooperacion:                                                                                
                                                                                AÑO_APERTURA=Cooperacion.split('/')
                                                                                AÑO_APERTURA=AÑO_APERTURA[1]
                                                                                numero_sumario=Cooperacion
                                                                                _=0
                                                                                if AÑO_APERTURA=='18':
                                                                                        for k,v in APERTURAS_18.items():                                
                                                                                                if v.endswith('/2018'):
                                                                                                        v=v.split('/')
                                                                                                        v=v[0]
                                                                                                        v=v+'/18'
                                                                                                if v==Cooperacion:
                                                                                                        Cooperacion=k
                                                                                                        _=1                                
                                                                                                        break
                                                                                                continue
                                                                                else:
                                                                                        for k,v in APERTURAS_19.items():                                
                                                                                                if v.endswith('/2019'):
                                                                                                        v=v.split('/')
                                                                                                        v=v[0]
                                                                                                        v=v+'/19'
                                                                                                if v==Cooperacion:
                                                                                                        Cooperacion=k
                                                                                                        _=1                                
                                                                                                        break
                                                                                                continue    
                                                                                        if _==0:
                                                                                                for k,v in APERTURAS_19.items():                                
                                                                                                        if v.endswith('/2019'):
                                                                                                                v=v.split('/')
                                                                                                                v=v[0]
                                                                                                                v=v+'/19'
                                                                                                        if v==Cooperacion:
                                                                                                                Cooperacion=k
                                                                                                                _=1                                
                                                                                                                break
                                                                                                        continue   
                                                                                if _==0:
                                                                                        Cooperacion=input('No se encontro el numero de cooperacion correspondiente al sumario {}, por favor introduzca el numero de cooperacion correspondiente, con el año al final, por ejemplo 1923-18. Si quiere volver a introducir el numero de sumario, presione enter'.format(Cooperacion))
                                                                                        if Cooperacion=='':
                                                                                                continue
                                                                        elif '-' in Cooperacion:
                                                                                AÑO_APERTURA=Cooperacion.split('-')
                                                                                AÑO_APERTURA=AÑO_APERTURA[1]
                                                                                if Cooperacion in APERTURAS:
                                                                                        numero_sumario=APERTURAS[Cooperacion]
                                                                        if '-' not in Cooperacion:
                                                                                _=input('Que año es la cooperacion?. Si es 2018, poner solo 18, lo mismo para 2019\n')
                                                                                Cooperacion=Cooperacion+'-'+_
                                                                                if Cooperacion in APERTURAS:
                                                                                        numero_sumario=APERTURAS[Cooperacion] 
                                                                #una vez definido, vamos a buscarlo en la carpeta de actas escaneadas. 
                                                                #-----------------------------
                                                                match=False
                                                                CHECKEO='ODIO EL SADE DE MIERDA'
                                                                Recien_subido=False
                                                                adobe=r'C:\Program Files (x86)\Adobe\Reader 11.0\Reader\AcroRd32.exe'#ACA VER QUE HACER SI NO TIENE EL ACROBAT
                                                                #------------------------------------
                                                                #Aca se busca el acta y el excel
                                                                path_DiscCompartido=Letra_Disco_Compartido+r':\ACTAS ESCANEADAS RAKY'
                                                                if AÑO_APERTURA=='18':
                                                                        path_DiscCompartido=path_DiscCompartido+r'\AÑO 2018'
                                                                else:
                                                                        path_DiscCompartido=path_DiscCompartido+r'\AÑO 2019'
                                                                Desea_Subir_el_acta_faltante_al_GEDO=False
                                                                while True:
                                                                        if '-' in Cooperacion:
                                                                                Cooperacion_sin_año=Cooperacion.split('-')
                                                                                Cooperacion_sin_año=Cooperacion_sin_año[0]
                                                                        if CHECKEO=='EXIT':
                                                                                break
                                                                        for root, dirs, files in os.walk(path_DiscCompartido):
                                                                                for name in files:
                                                                                        if name ==Cooperacion+'.pdf' or name.endswith(Cooperacion) or name.startswith(Cooperacion):
                                                                                                filepath_pdf=os.path.join(root, name)
                                                                                                proc = subprocess.Popen([adobe, filepath_pdf])
                                                                                                CHECKEO=input('Checkea los datos. Si esta bien apreta enter, si no tipea "MAL" o pone "EXIT" para volver a reintroducir el numero de cooperacion\n').upper()
                                                                                                if CHECKEO =='' or CHECKEO=='EXIT':
                                                                                                        proc.terminate()
                                                                                                break
                                                                                        
                                                                        for root, dirs, files in os.walk(path_DiscCompartido):
                                                                                if CHECKEO=='EXIT':
                                                                                        break
                                                                                for name in files:                                
                                                                                        if name.endswith('.xlsx'):
                                                                                                filepath_name=os.path.join(root, name)
                                                                                                try:                                                
                                                                                                        wb = openpyxl.load_workbook(filepath_name)
                                                                                                        try:
                                                                                                                ws=wb['SADE']
                                                                                                        except:
                                                                                                                ws=wb['Sheet1']
                                                                                                        for rowNum in range(1, ws.max_row+1): 
                                                                                                                if ws.cell(row=rowNum, column=1).value==Cooperacion or ws.cell(row=rowNum, column=1).value==Cooperacion_sin_año or ws.cell(row=rowNum, column=1).value.startswith(Cooperacion):
                                                                                                                        IF=ws.cell(row=rowNum, column=2).value
                                                                                                                        IF=IF.split('-')
                                                                                                                        AÑO=IF[1]
                                                                                                                        IF=IF[2]
                                                                                                                        match_filepath_name=os.path.join(root, name)
                                                                                                                        match=True
                                                                                                                        print('Pdf encontrado!')
                                                                                                                        break                                                               
                                                                                                        break
                                                                                                except:
                                                                                                        continue
                                                                        if CHECKEO=='EXIT':
                                                                                continue
                                                                        volver=False
                                                                        if match!=True:
                                                                                Desea_Subir_el_acta_faltante_al_GEDO=input('No se encontro el codigo IF del acta, desea subirla de nuevo? (SI/NO) ADVERTENCIA: todavia no escribi el codigo para que despues de subir el acta, siga el programa como si nada, asi que te recomiendo poner "NO" y subirla a mano, porque sino eventualmente el programa se rompera (no se porque, TODAVIA)  ').upper()
                                                                                if Desea_Subir_el_acta_faltante_al_GEDO=='NO' or Desea_Subir_el_acta_faltante_al_GEDO=='':
                                                                                        volver=True
                                                                                        break
                                                                                #COPYPASTERINO
                                                                                Driver_EE=driver
                                                                                driver = webdriver.Chrome()
                                                                                driver.get('https://eut-pr.apps.buenosaires.gob.ar/gedo-web/')
                                                                                time.sleep(5)
                                                                                xpath_send(('//*[@id="username"]'),'20261657962')
                                                                                xpath_send(('//*[@id="password"]'),'Nubia007')
                                                                                driver.find_element_by_id('password').submit()
                                                                                existe_excel=False
                                                                                for root, dirs, files in os.walk(path_DiscCompartido):
                                                                                        for name in files:
                                                                                                if name ==Cooperacion+'.pdf':
                                                                                                        filepath_pdf=os.path.join(root, name)
                                                                                                        match_filepath_name=filepath_pdf.strip(name)
                                                                                                        for root, dirs, files in os.walk(match_filepath_name):
                                                                                                                for name in files:
                                                                                                                        if name.endswith('.xlsx'):
                                                                                                                                match_filepath_name_excel=os.path.join(root, name)
                                                                                                                                existe_excel=True
                                                                                                                                break
                                                                                                while True:
                                                                                                        try:
                                                                                                                Ini_Doc=driver.find_element_by_class_name('z-toolbarbutton') #boton de inciar documento
                                                                                                                Ini_Doc.click()
                                                                                                                break
                                                                                                        except:
                                                                                                                time.sleep(1)
                                                                                                css_send('input.z-bandbox-inp[autocomplete="off"]','IFGRA')
                                                                                                css_click('.z-toolbarbutton[title="Continuar con la tarea de producción del documento."]')
                                                                                                coop=Cooperacion.strip('.pdf')#NUMERO DE COOPERACION <input id="z_58v_th" style="width:350px;" class="z-textbox" value="" type="text" maxlength="250">
                                                                                                time.sleep(2)
                                                                                                css_send('input.z-textbox[maxlength="250"]',coop)
                                                                                                time.sleep(2)
                                                                                                load_handling(driver.find_element_by_css_selector('input[name="file"][type="file"][hidefocus="true"]').send_keys(filepath_pdf))#lugar donde esta el archivo
                                                                                                load_handling(driver.find_element_by_xpath('//img[@src="/gedo-web/imagenes/FirmarYoMismoElDocumento.png"]').click())
                                                                                                xpath_click('//img[@src="./imagenes/FirmarConCertificado.png"]')
                                                                                                time.sleep(10)
                                                                                                while True:
                                                                                                        timer=0
                                                                                                        try:
                                                                                                                Respuesta_GEDO= driver.find_element_by_css_selector('*[style="text-align:left;width:100%"][cellpadding="0"]')#lugar donde esta el archivo
                                                                                                                #texto sade
                                                                                                                Respuesta_GEDO=Respuesta_GEDO.text
                                                                                                                Respuesta_GEDO=Respuesta_GEDO.split('IF')
                                                                                                                Respuesta_GEDO='IF'+Respuesta_GEDO[1]
                                                                                                                IF=Respuesta_GEDO.split('-')
                                                                                                                IF=IF[2]
                                                                                                                AÑO='2019'
                                                                                                                break
                                                                                                        except:
                                                                                                                time.sleep(5)
                                                                                                                timer+=1
                                                                                                                if timer > 20:
                                                                                                                        print('El SADE esta trabadisimo (o algo terrible paso). Cuando se destrabe, presiona ENTER')
                                                                                                                        input()
                                                                                                                continue          
                                                                                                barra()
                                                                                                print('Se subio la Cooperacion '+coop+', con el codigo '+Respuesta_GEDO+'. Ahora si puede responder ese SADE')
                                                                                                barra()
                                                                                                xpath_click('//img[@src="./imagenes/VolverAlBuzonTareas.png"]')
                                                                                #-------------------------------------------------------------
                                                                                #Paso los datos al excel. Dependiendo si hay un archivo excel o no, lo creo y lo cargo lo lo actualizo
                                                                                if existe_excel==False:
                                                                                        wb = Workbook()
                                                                                        ws = wb.active
                                                                                        ws.title = "SADE"
                                                                                        sheet=wb['SADE']
                                                                                        sheet['A1']='Cooperacion'
                                                                                        sheet['B1']='IF COMPLETO'
                                                                                        sheet['C1']='CODIGO IF para PASE'
                                                                                        sheet['D1']='EX' 
                                                                                        sheet.cell(row=2, column=1).value = coop
                                                                                        sheet.cell(row=2, column=2).value = Respuesta_GEDO
                                                                                        sheet.cell(row=2, column=3).value = IF
                                                                                        wb.save(filepath_pdf+r'/NUMEROS_DE_SADE.xlsx')
                                                                                elif existe_excel==True:
                                                                                        wb = openpyxl.load_workbook(match_filepath_name_excel)
                                                                                        try:
                                                                                                ws=wb['SADE']
                                                                                        except:
                                                                                                ws=wb['Sheet1']
                                                                                        for rowNum in range(5, ws.max_row+1): 
                                                                                                if ws.cell(row=rowNum, column=1).value=='':
                                                                                                        sheet.cell(row=rowNum, column=1).value = coop
                                                                                                        sheet.cell(row=rowNum, column=2).value = Respuesta_GEDO
                                                                                                        sheet.cell(row=rowNum, column=3).value = IF
                                                                                                else:
                                                                                                        continue
                                                                                        wb.save(match_filepath_name_excel)
                                                                                driver=Driver_EE                                                                                
                                                                                continue
                                                                        
                                                                        break
                                                                #-----------------------------
                                                                if volver==True:
                                                                        xpath_click('/html[1]/body[1]/div[6]/div[2]/div[1]/div[1]/div[1]/div[1]')
                                                                        time.sleep(2)
                                                                        if Es_el_Primer_expediente==True: 
                                                                                xpath_click('/html[1]/body[1]/div[3]/div[3]/div[1]/div[1]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[19]/div[1]/div[1]/div[1]/img[1]')
                                                                        else:
                                                                                xpath_click('/html[1]/body[1]/div[4]/div[3]/div[1]/div[1]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[19]/div[1]/div[1]/div[1]/img[1]')
                                                                        time.sleep(2)
                                                                        Repetir_ubicacion_de_expediente=False
                                                                        Es_el_Primer_expediente='Claro, porque esto tiene sentido'                                             
                                                                        break
                                                                if CHECKEO=='EXIT':
                                                                        continue
                                                                if Desea_Subir_el_acta_faltante_al_GEDO=='NO':
                                                                        continue
                                                                try:
                                                                        driver.find_element_by_xpath('/html[1]/body[1]/div[6]/div[2]/div[1]/div[1]/div[1]/div[1]').click()
                                                                except:
                                                                        continue
                                                                time.sleep(1)
                                                                css_send('input[style="width: 111px;"]','IF')
                                                                time.sleep(1)
                                                                css_send('input[tabindex="2"]',AÑO)
                                                                time.sleep(1)
                                                                css_send('input[tabindex="3"]',IF)
                                                                time.sleep(1)
                                                                css_send('input[tabindex="4"]','SIPC')
                                                                time.sleep(1)
                                                                xpath_click('//img[@src="./imagenes/VincularDocumento.png"]')
                                                                previsualizacion='no'
                                                                timer=0
                                                                while True:
                                                                        for i in range (20):
                                                                                path='/html[1]/body[1]/div[{}]/div[3]/div[1]/div[1]/div[1]/div[2]/div[2]/div[1]/div[1]/div[3]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/table[1]/tbody[2]/tr[1]/td[7]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[3]/img[1]'.format(str(i))
                                                                                try:
                                                                                        driver.find_element_by_xpath(path).click()
                                                                                        previsualizacion='si'
                                                                                        break
                                                                                except:
                                                                                        i+=1
                                                                        if previsualizacion=='si': 
                                                                                while True:                               
                                                                                        try:
                                                                                                driver.switch_to.frame(driver.find_element_by_xpath('/html[1]/body[1]/div[6]/div[3]/div[1]/div[1]/div[1]/iframe[1]'))
                                                                                                _=driver.find_elements_by_css_selector('span.z-tab-text')
                                                                                                for element in _:
                                                                                                        if element.text=='Previsualizar':
                                                                                                                element.click()
                                                                                                                _='break'
                                                                                                                break
                                                                                                if _=='break':
                                                                                                        break                                                                                                         
                                                                                        except:
                                                                                                timer+=1
                                                                                                if timer > 20:
                                                                                                        break                        
                                                                                                continue
                                                                                break
                                                                        else:
                                                                                timer+=1
                                                                                if timer > 20:
                                                                                        break                        
                                                                input('Checkee que el acta corresponda a lo que pide el SADE. Deberia ser el sumario "{}" de la cooperacion "{}". Aprete enter para continuar la carga\n'.format(numero_sumario,Cooperacion))
                                                                driver.switch_to.default_content()
                                                                xpath_click('/html[1]/body[1]/div[6]/div[2]/div[1]/div[1]/div[1]/div[1]')
                                                                xpath_click('//img[@src="./imagenes/RealizarPase.png"]')
                                                                xpath_click('/html[1]/body[1]/div[6]/div[3]/div[1]/div[1]/div[1]/div[5]/div[2]/table[1]/tbody[2]/tr[1]/td[1]/div[1]/span[1]/input[1]')
                                                                xpath_send('/html[1]/body[1]/div[6]/div[3]/div[1]/div[1]/div[1]/div[5]/div[2]/table[1]/tbody[2]/tr[1]/td[2]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[1]/i[1]/input[1]','Maria AVILA ( MCAVILA - SIPC )')
                                                                xpath_enter('/html[1]/body[1]/div[6]/div[3]/div[1]/div[1]/div[1]/div[5]/div[2]/table[1]/tbody[2]/tr[1]/td[2]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[1]/i[1]/input[1]')
                                                                driver.switch_to.frame(driver.find_element_by_xpath('/html[1]/body[1]/div[6]/div[3]/div[1]/div[1]/div[1]/div[1]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/div[1]/div[1]/div[3]/div[1]/iframe[1]'))
                                                                driver.switch_to.frame(driver.find_element_by_xpath('//*[@id="xEditingArea"]/iframe'))
                                                                if CHECKEO!='MAL':
                                                                        xpath_send('/html/body',SPEECH) 
                                                                else:
                                                                        _=input('introduci el speach modificado, y apreta enter')
                                                                driver.switch_to.default_content()
                                                                xpath_click('/html[1]/body[1]/div[6]/div[3]/div[1]/div[1]/div[1]/div[8]/div[1]/div[1]/img[1]')
                                                                while True:
                                                                        timer=0
                                                                        try:
                                                                                Numero_EX= driver.find_element_by_xpath('/html[1]/body[1]/div[4]/div[3]/div[1]/div[1]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[3]/div[1]/span[1]')
                                                                                Numero_EX=Numero_EX.text
                                                                                Numero_EX=Numero_EX.split('EX')
                                                                                Numero_EX='EX'+Numero_EX[1]
                                                                                Numero_EX=Numero_EX.split('SIPC')
                                                                                Numero_EX=Numero_EX[0]+'SIPC'
                                                                                xpath_click('/html[1]/body[1]/div[4]/div[3]/div[1]/div[1]/div[1]/table[2]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[1]/span[1]/table[1]/tbody[1]/tr[2]/td[2]')
                                                                                break
                                                                        except:
                                                                                time.sleep(5)
                                                                                timer+=1
                                                                                if timer > 20:
                                                                                        print('El SADE esta trabadisimo (o algo terrible paso). Cuando se destrabe, presiona ENTER')
                                                                                        input()
                                                                                continue          
                                                                #----------------------------
                                                                #actualizacion del excel
                                                                wb = openpyxl.load_workbook(match_filepath_name)
                                                                try:
                                                                        ws=wb['SADE']
                                                                except:
                                                                        ws=wb['Sheet1']
                                                                for rowNum in range(1, ws.max_row+1): 
                                                                        if ws.cell(row=rowNum, column=1).value==Cooperacion:
                                                                                ws.cell(row=rowNum, column=4).value=Numero_EX
                                                                        else:
                                                                                continue
                                                                wb.save(match_filepath_name)
                                                                try:
                                                                        proc.terminate()
                                                                except:
                                                                        print()
                                                                print('Se realizo el pase de la cooperacion {} con el numero de expediente {}'.format(Cooperacion,Numero_EX))   
                                                                time.sleep(2)
                                                                break
                                        
                                        except:
                                                input('Error al leer el actual expediente.Esto puede deberse a que no se encontro IF (debido a que el expediente no corresponde a nuestra area, o porque soy horrible codeando) El programa se lo salteara, presione enter cosa para continuar')
                                                if Es_el_Primer_expediente==True: 
                                                        xpath_click('/html[1]/body[1]/div[3]/div[3]/div[1]/div[1]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[19]/div[1]/div[1]/div[1]/img[1]')
                                                else:
                                                        xpath_click('/html[1]/body[1]/div[4]/div[3]/div[1]/div[1]/div[1]/table[1]/tbody[1]/tr[1]/td[1]/table[1]/tbody[1]/tr[1]/td[19]/div[1]/div[1]/div[1]/img[1]')
                                                time.sleep(2)
                                                Repetir_ubicacion_de_expediente=False
                                                Es_el_Primer_expediente='Claro, porque esto tiene sentido'                                             
                                                break
                continue
        print('No quedan mas SADE por Responder! Felicitaciones!')
        _=input('Desea hacer otra semana del SADE?  (SI/NO)   ').upper()
        if _!='SI':
                input('Oki ~, presione enter para salir')
                exit()
                


















